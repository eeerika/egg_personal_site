[
  {
    "path": "posts/2022-02-21-project2/",
    "title": "Worst Graph: Creative Graph-Making Exploration",
    "description": "A graph demonstrating what NOT to do, created in ESM 206 at UCSB.",
    "author": [
      {
        "name": "Erika Egg",
        "url": {}
      }
    ],
    "date": "2022-02-21",
    "categories": [],
    "contents": "\nGoal: make the worst possible graph (unclear, irresponsible, terrible looking) I possibly can by customizing (from the ggplot default) in at least 7 ways - more encouraged - to make it as terrible as possible.\n\n\nhide\n\nlaunches_pegasus <- space_launches %>% \n  select(launch_year, type) %>% #select only columns launch_year and type\n  filter(str_detect(type, \"Pegasus\")) #filter for only types containing Pegasus\n\nmax_cat <- readPNG(here(\"data\", \"max_cat.png\")) #read in image for use as background\n\nggplot(data = launches_pegasus, aes(x = launch_year)) + \n  annotation_custom(rasterGrob(max_cat, \n                               width = unit(1,\"npc\"), \n                               height = unit(1,\"npc\")), \n                    -Inf, Inf, -Inf, Inf) +\n  geom_histogram(color = \"yellow\",\n           aes(fill = type)) + #1 added legend where you have to look back and forth and match things up to graph; two colors are almost the same/hard to distinguish\n  coord_flip() + #2 flipped it horizontally which makes it harder to understand\n  scale_fill_manual(values = c(\"magenta1\",\"yellow\",\"chartreuse1\",\"cyan1\", \"lawngreen\")) + #3 chose very bright contrasting colors that hurt eyes\n  labs(x = \"# of pegasus type space launch ship shuttles going into outer space, blasting off, reaching the stars\", \n       y = \"the launch years, every year there was a pegasus type launch including years from 1990 to 2016 maybe idk i think that's it\", \n       title = \"hdfoighsdoigshertoihewoirhtoi\") + #4 made axes long and with extra fluff; title is gibberish\n  theme(plot.title = element_text(size = 6, family = \"Wingdings\"), axis.text.y = element_text(angle = 120), axis.text.x = element_text(angle = -120), axis.title.y = element_text(angle = -135, size = 5, color = \"cyan1\"), axis.title.x = element_text(angle = 20, size = 5, color = \"magenta1\")) #5 very small size font for title/axes, #6 changed title font to unreadable wingdings, #7 angled/upsidedown years on y-axis and counts on x-axis; angled x and y axis labels as well, #8 added image background of my cat\n\n\n\n\n\n\n\n",
    "preview": "posts/2022-02-21-project2/project2_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2022-02-21T16:38:04-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-21-project3/",
    "title": "Wrangling and Visualizing Mountain Yellow-legged Frog (Rana muscosa) Counts",
    "description": "Creating a compound figure in ESM 244 at UCSB.",
    "author": [
      {
        "name": "Erika Egg",
        "url": {}
      }
    ],
    "date": "2022-02-21",
    "categories": [],
    "contents": "\n\n\nhide\n\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(patchwork)\nlibrary(extrafont) #need font_import() if first time\nlibrary(here)\n\n\n\nIntroduction\nThe data used in this report includes amphibian abundance recorded by the Sierra Lakes Inventory Project from 1995-2002, accompanied by additional characteristics such as species, life stage, and locational attributes. Here I attempt to answer two questions: “What is the mountain yellow-legged frog abundance trend over this time period by life stage?” and “Which lakes contained the highest total observed mountain yellow-legged frog counts over this time period?” utilizing a compound figure as a final output.\nPreparatory steps\n1. Read in the file containing the Sierra amphibian data.\n\n\nhide\n\nfrogs <- read_excel(here(\"data\", \"sierra_amphibians.xlsx\")) #read in the data we will be using: sierra                                                                       amphibians\n\n\n\n2. Perform some initial wrangling on the data that can aid the creation of both plots.\n\n\nhide\n\nramu_wrangled <- frogs %>%\n   filter(amphibian_species == \"RAMU\", amphibian_life_stage != \"EggMass\") %>% #filter for RAMU and exclude                                                                                     EggMass stage\n   mutate(date_new = ymd(survey_date)) %>% #convert date to workable (date) format in new column\n   mutate(year = year(date_new)) %>% #extract year from new date column\n   drop_na(amphibian_number) #remove NAs from relevant column\n\n\n\nCreating our first plot\n3a. Wrangle the data for the first plot by getting RAMU counts after grouping by life stage and year.\n\n\nhide\n\ncount_ramu_stage <- ramu_wrangled %>% #use the subset created above\n  group_by(amphibian_life_stage, year) %>% #group by life stage and year\n  summarize(stage_frog_count = sum(amphibian_number)) #take the count of frogs\n\n\n\n3b. Create a graph of total mountain yellow-legged frog (Rana muscosa) count each year across all water bodies, by life stage excluding the ‘EggMass’ level.\n\n\nhide\n\np1 <- ggplot(data = count_ramu_stage, aes(x = year, #set x as year,\n                                          y = stage_frog_count, #y as count,\n                                          color = amphibian_life_stage)) + #and color as life stage\n  geom_line(size = 0.4) + #change line width\n  facet_wrap(~amphibian_life_stage) + #facet wrap by life stage for readability\n  scale_color_manual(values = c(\"palegreen3\", \"steelblue1\", \"tan\")) + #change line colors\n  theme_dark() + #choose theme\n  theme(panel.grid.minor.x=element_blank(),\n        panel.grid.major.x=element_blank(), #get rid of vertical grid lines \n        text=element_text(size=10,  family=\"Impact\")) + \n  labs(x = \"Year\", #label x,\n       y = \"Yellow-legged frog counts\", #and y axis,\n       color = \"Life Stage\") #and color key\n\n\n\nCreating our second plot\n4a. Wrangle the data for the second plot by getting the top 5 RAMU counts (excluding Tadpoles too) after grouping by lake.\n\n\nhide\n\nramu_no_tadpole <- ramu_wrangled %>%\n   filter(amphibian_life_stage != \"Tadpole\") #filter out Tadpoles\n\ncount_ramu_lake <- ramu_no_tadpole %>%\n   group_by(lake_id) %>% #group by lake id\n   summarize(lake_frog_count = sum(amphibian_number)) %>% #take the counts \n   slice_max(lake_frog_count, n = 5) %>% #take only top 5 lakes, including ties if applicable\n   mutate(id_reformatted = paste(\"Lake\", lake_id)) #have a reformatted lake id\n\n\n\n4b. Create a column graph containing total counts (over all years of the study) of combined adult and subadult endangered mountain yellow-legged frogs (Rana muscosa) observed in the 5 lakes with the greatest total observed counts.\n\n\nhide\n\np2 <- ggplot(data = count_ramu_lake, aes(x = fct_reorder(id_reformatted, lake_frog_count), #set x as lake id                                                                                                reordered by count\n                                         y = lake_frog_count)) + #set y as count\n  geom_col(color = \"tan\", #change edge color, \n           fill = \"aquamarine4\") + #and fill color \n  theme_dark() + #choose theme\n  theme(panel.grid.minor.y=element_blank(),\n        panel.grid.major.y=element_blank(), #get rid of horizontal grid lines \n        text=element_text(size=10,  family=\"Impact\")) + #change text font and size\n  labs(y = \"Total yellow-legged frog counts (Adult + SubAdult)\", #label y,\n       x = \"Lake ID\") + #and x axis\n  coord_flip() #make horizontal\n\n\n\nFinal compound plot\n5. Put together final plot including both individual plots constructed previously.\n\n\nhide\n\np1 / p2 #create top and bottom combined plot\n\n\n\n\nFigure 1. Top graph: yellow-legged frog counts each year by life stage from 1995 to 2002. Height of lines indicate number of yellow-legged frogs counted in that year for each life stage. Bottom graph: cumulative yellow-legged frogs counts across the years 1995 to 2002 by lake. The lakes with the top five counts have been included, identified only by ID numbers for confidentiality. Data: Knapp et al. 2020.\nCitation\nKnapp, R.A., C. Pavelka, E.E. Hegeman, and T.C. Smith. 2020. The Sierra Lakes Inventory Project: Non-Native fish and community composition of lakes and ponds in the Sierra Nevada, California ver 2. Environmental Data Initiative. https://doi.org/10.6073/pasta/d835832d7fd00d9e4466e44eea87fab3\n\n\n\n",
    "preview": "posts/2022-02-21-project3/project3_files/figure-html5/unnamed-chunk-7-1.png",
    "last_modified": "2022-02-21T16:31:25-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-21-project4/",
    "title": "Florida Palmetto Species Classification",
    "description": "Binary logistic regression from ESM 244 at UCSB.",
    "author": [
      {
        "name": "Erika Egg",
        "url": {}
      }
    ],
    "date": "2022-02-21",
    "categories": [],
    "contents": "\n\n\nhide\n\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(caret)\nlibrary(AICcmodavg)\nlibrary(kableExtra)\nlibrary(patchwork)\nlibrary(here)\n\n\n\nOverview\nThe data used in this report includes variables of plant height, canopy length, canopy width, and number of green leaves as they pertain to Florida palmettos from 1981-2017, as well as indicates the palmetto species: Serenoa repens or Sabal etonia. Here I use binary logistic regression to test the feasibility of using the four variables listed previously to classify whether a palmetto is species Serenoa repens or Sabal etonia.\nData citation:\nAbrahamson, W.G. 2019. Survival, growth and biomass estimates of two dominant palmetto species of south-central Florida from 1981 - 2017, ongoing at 5-year intervals ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/f2f96ec76fbbd4b9db431c79a770c4d5\nPreparatory steps\n1. Read in the file containing Florida palmetto data.\n\n\nhide\n\n#Read in palmetto data\npalmetto <- read_csv(here(\"data\", \"palmetto.csv\"))\n\n\n\n2. Perform some initial wrangling on the data.\n\n\nhide\n\npalmetto_sub <- palmetto %>%\n   mutate(species = case_when(\n    species == 1 ~ \"Serenoa repens\",\n    species == 2 ~ \"Sabal etonia\")) %>% #rename 1 and 2 to reflect species names\n   mutate(species = as.factor(species)) %>% #ensure it is a factor after renaming\n   select(species, height, length, green_lvs, width) %>% #select relevant columns\n   drop_na() #drop the NAs\n\n\n\nData exploration through visualization\n3. Create 3 finalized data visualizations (combined into a compound figure) in which I explore differences in height, canopy length, and green leaves for the two species.\n\n\nhide\n\ngl <- palmetto_sub %>% #number of green leaves\n   ggplot(aes(x = species, y = green_lvs, fill = species)) + #show diffs by species\n   geom_boxplot() + #choose boxplot\n   scale_fill_manual(values = c(\"rosybrown3\", \"darkkhaki\")) + #change box colors\n   theme_minimal() + #choose theme\n   theme(panel.grid.minor.x=element_blank(),\n         panel.grid.major.x=element_blank(), #get rid of vertical grid lines \n         text=element_text(size=10,  family=\"Times New Roman\"), #choose font\n         legend.position = \"none\") + #no legend\n   labs(x = \"\", #unlabel x,\n        y = \"\", #and y axis,\n        title = \"Number of Green Leaves\") #and add title\n\nl <- palmetto_sub %>% #canopy length\n   ggplot(aes(x = species, y = length, fill = species)) + #show diffs by species\n   geom_boxplot() + #choose boxplot\n   scale_fill_manual(values = c(\"rosybrown3\", \"darkkhaki\")) + #change box colors\n   theme_minimal() + #choose theme\n   theme(panel.grid.minor.x=element_blank(),\n         panel.grid.major.x=element_blank(), #get rid of vertical grid lines \n         text=element_text(size=10,  family=\"Times New Roman\"), #choose font\n         legend.position = \"none\") + #no legend\n   labs(x = \"\", #unlabel x,\n        y = \"\", #and y axis,\n        title = \"Canopy Length\") #and add title\n\nh <- palmetto_sub %>% #plant height\n   ggplot(aes(x = species, y = height, fill = species)) + #show diffs by species\n   geom_boxplot() + #choose boxplot\n   scale_fill_manual(values = c(\"rosybrown3\", \"darkkhaki\")) + #change box colors\n   theme_minimal() + #choose theme\n   theme(panel.grid.minor.x=element_blank(),\n         panel.grid.major.x=element_blank(), #get rid of vertical grid lines\n         text=element_text(size=10,  family=\"Times New Roman\"), #choose font\n         legend.position = \"none\") + #no legend\n   labs(x = \"\", #unlabel x,\n        y = \"\", #and y axis,\n        title = \"Plant Height\") #and add title\n\nh + l + gl #create compound figure\n\n\n\n\nFigure 1. From left to right: graphs demonstrating differences in plant height, canopy length, and number of green leaves between the two species of palmetto, Sabal etonia and Serenoa repens. The less overlap the boxplots have and the further away the means are from each other, the more likely that variable is able to help predict species. Data: Abrahamson, 2019.\nTakeaway:\nPlant height seems least likely to help classify which species is which (similar means and overlap), canopy length seems more likely (slightly different means, less overlap), and number of green leaves seems the most likely, as the boxplots for number of green leaves have no overlap.\nBinary logistic regression\n4. Determine the probability of a plant being either Serenoa repens or Sabal etonia based on several predictor variables, performing the analysis twice, using cross validation to compare two models:\nLog odds of plant type using plant height, canopy length, canopy width and green leaves as predictor variable.\nLog odds of plant type using plant height, canopy width and green leaves (i.e., drop canopy length for this model)\n\n\nhide\n\n#model 1 using height, length, width, and green leaves\nf1 <- species ~ height + length + width + green_lvs #formula 1\npalmetto_blr1 <- glm(formula = f1, #glm 1\n                    data = palmetto_sub,\n                    family = \"binomial\")\n\n#model 2 excluding length\nf2 <- species ~ height + width + green_lvs #formula 2\npalmetto_blr2 <- glm(formula = f2, #glm 2\n                    data = palmetto_sub,\n                    family = \"binomial\")\n\n#glancing at model outputs for initial reference\nblr1_tidy <- broom::tidy(palmetto_blr1)\n#blr1_tidy\nblr2_tidy <- broom::tidy(palmetto_blr2)\n#blr2_tidy\n\n\n\n5. Use ten-fold cross validation, repeated ten times, to see which model performs better at classification, backing up the results with a comparison of AICc values as well.\n\n\nhide\n\n#set up seed for reproducibility\nset.seed(123)\n\n#set up method of 10-fold cross validation repeated 10 times\ntr_ctrl <- trainControl(method = \"repeatedcv\", number = 10, repeats = 10)\n\n#train the two models using tr_ctrl\nmodel1 <- train(f1, \n                data = palmetto_sub,\n                method = \"glm\", \n                family = 'binomial',\n                trControl = tr_ctrl)\n#model1\n\nmodel2 <- train(f2, \n                data = palmetto_sub, \n                method = \"glm\", \n                family = 'binomial',\n                trControl = tr_ctrl)\n#model2\n\n#compare AICcs\nAICc_values <- AICcmodavg::aictab(list(palmetto_blr1, palmetto_blr2))\n#AICc_values\n\n\n\nTakeaway:\nBoth repeated cross validation (Model 1: 91.6% accuracy vs. a lower Model 2: 89.9% accuracy) and AICc values (Model 1: 5194.57 vs. a significantly higher Model 2: 5987.48) confirm that Model 1 (plant height + canopy length + canopy width + green leaves) performs better than Model 2 (same variables except excluding canopy length).\n6. Train the selected model using the entire dataset, and create a finalized table containing the binary logistic regression model results.\n\n\nhide\n\n#final model\npalmetto_blr_final <- glm(formula = f1,\n                    data = palmetto_sub,\n                    family = \"binomial\")\n\n#final table\nblr_tidy_final <- broom::tidy(palmetto_blr1) %>%\n   mutate(p.value = case_when(p.value < 0.001 ~ \"< 0.001\")) %>%\n   kbl(caption = \"Table 1. Binary logistic regression results for the selected model\") %>%\n   kable_paper(full_width = F)\nblr_tidy_final\n\n\n\nTable 1: Table 1. Binary logistic regression results for the selected model\n\n\nterm\n\n\nestimate\n\n\nstd.error\n\n\nstatistic\n\n\np.value\n\n\n(Intercept)\n\n\n-3.2266851\n\n\n0.1420708\n\n\n-22.71180\n\n\n< 0.001\n\n\nheight\n\n\n0.0292173\n\n\n0.0023061\n\n\n12.66984\n\n\n< 0.001\n\n\nlength\n\n\n-0.0458233\n\n\n0.0018661\n\n\n-24.55600\n\n\n< 0.001\n\n\nwidth\n\n\n-0.0394434\n\n\n0.0021000\n\n\n-18.78227\n\n\n< 0.001\n\n\ngreen_lvs\n\n\n1.9084747\n\n\n0.0388634\n\n\n49.10728\n\n\n< 0.001\n\n\nSpecies classification success analysis\n7. Evaluate how successfully the final model would “classify” a plant as the correct species, using a 50% cutoff, including a finalized table showing, for each species, how many plants in the original dataset would be correctly classified and how many were incorrectly classified by the model, as well as percent correctly classified.\n\n\nhide\n\n#generating probability predictions\nblr1_fitted <- palmetto_blr1 %>%\n   broom::augment(type.predict = \"response\")\n\n#adding columns for the species prediction and species prediction correctness\nblr1_prediction <- blr1_fitted %>%\n  mutate(prediction = case_when(\n     .fitted < 0.5 ~ \"Sabal etonia\",\n     .fitted >= 0.5 ~ \"Serenoa repens\")) %>% \n  mutate(correctness = case_when(\n     species != prediction ~ \"Incorrect\",\n     species == prediction ~ \"Correct\")) \n\n#putting together prediction table including percent correctly classified\nprediction_table <- blr1_prediction %>%\n   group_by(species, correctness) %>% \n   summarize(counts = n()) %>%\n   pivot_wider(names_from = correctness, values_from = counts) %>%\n   mutate(percent_correct = round((Correct/(Correct+Incorrect)*100), 1))\n\n#renaming columns to make name formatting nicer\nnames(prediction_table)[names(prediction_table) == \"species\"] <- \"Species\"\nnames(prediction_table)[names(prediction_table) == \"percent_correct\"] <- \"% Correctly Classified\"\nnames(prediction_table)[names(prediction_table) == \"Correct\"] <- \"# Correct\"\nnames(prediction_table)[names(prediction_table) == \"Incorrect\"] <- \"# Incorrect\"\n\n#make the overall formatting of the table nicer\nprediction_table %>%\n   kbl(caption = \"Table 2. Model species prediction based on a 50% probability cutoff\") %>%\n   kable_paper(full_width = F)\n\n\n\nTable 2: Table 2. Model species prediction based on a 50% probability cutoff\n\n\nSpecies\n\n\n# Correct\n\n\n# Incorrect\n\n\n% Correctly Classified\n\n\nSabal etonia\n\n\n5701\n\n\n454\n\n\n92.6\n\n\nSerenoa repens\n\n\n5548\n\n\n564\n\n\n90.8\n\n\nConcluding takeaway:\nThe final model classifies Sabal etonia slightly better than Serenoa repens (92.6% vs. 90.8% accuracy, a 1.8% difference). Overall, classification of species for both species have very high accuracies using a model that includes all four of our target variables.\n\n\n\n",
    "preview": "posts/2022-02-21-project4/project4_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-02-21T16:36:06-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-17-project1/",
    "title": "Bonanza Hares: Exploratory Report",
    "description": "A sample report constructed in ESM 206 at UCSB.",
    "author": [
      {
        "name": "Erika Egg",
        "url": {}
      }
    ],
    "date": "2022-02-17",
    "categories": [],
    "contents": "\nIntroduction\nThis report provides an exploratory overview of snowshoe hare data from near Bonanza Creek Experimental Forest at three sites (Black Spruce, Mature, and Riparian) (Kielland et al. 2017). The Black Spruce site refers to a mature lowland black spruce stand, while the Mature and Riparian sites includes stands of a variety of mature tree species, shrub species, and/or grass species (differing by site, but including: white spruce, black spruce, paper birch, willow, prickly rose, fireweed, among others), with a key difference being that the Riparian is located in a flood zone (Kielland et al. 2017). The data used here spans 1999 to 2012 (Kielland et al. 2017). Specifically, we conduct analyses of juvenile snowshoe hare trappings over the timespan (including only trappings from the three sites described) and of juvenile snowshoe hare weights in relation to sex, site, and hind foot length.\nData and analyses\nSnowshoe hare measurements (such as weight and hind foot length, key focuses in this report) are provided by the Bonanza Creek LTER, a partnership between the University of Alaska Fairbanks, and the U.S. Forest Service (Kielland et al. 2017). The data contain observations for 3,197 recorded trappings, collected from 1999 to 2012 (Kielland et al. 2017). Here we utilize R and R Studio to analyze the data through the generation of ggplot visualizations (ie. beeswarm, column chart, scatterplot), descriptive statistics (ie. mean, median, standard deviation), and statistical tests and related statistics (ie. two-sample t-test with a significance level (\\(\\alpha\\)) of 0.05, Cohen’s d, Pearson’s r, simple linear regression).\nExploratory findings\nA. Annual juvenile hare trap counts.\n\n\nhide\n\n#getting the counts for the total number of juvenile (age == \"j\") hare trappings during each year of the study (include all grid sites)\njuvenile_hares <- hares %>%\n  filter(age == \"j\") %>% #filtering for juvenile\n  mutate(date_new = mdy(date)) %>% #convert date to workable (date) format in new column\n  mutate(year = year(date_new))  #extract year from new date column\n\ncount_jh <- juvenile_hares %>% #use the subset created above\n  group_by(year) %>% #group by year\n  count() #take the count\n\n\n\n\n\nhide\n\n#create a finalized data visualization of the counts by year\nggplot(data = count_jh, aes(x = year, y = n)) + #setting x axis as year and y as the count\n  geom_col(color = \"black\",\n           fill = \"slategray4\") + #change fill color and edge color\n  theme_bw() + #choose theme\n  theme(panel.grid.minor.x=element_blank(),\n           panel.grid.major.x=element_blank()) + #get rid of vertical grid lines\n  labs(x = \"Year\",\n       y = \"Number of juvenile hare trappings\",\n       title = \"Juvenile snowshoe hare trap counts by year, 1999-2012\") #label axes and title\n\n\n\nhide\n\nsummary_count_jh <- count_jh %>%\n  ungroup() %>% #ungroup the groups to get stats across all\n  summarize(\n    mean_trapped = mean(n), #get mean\n    median_trapped = median(n), #get median\n    min_trapped = min(n), #get min\n    max_trapped = max(n) #get max\n  )\n\n\n\nFigure 1. Juvenile snowshoe hair trappings each year from 1999 to 2012. Height of columns indicate number of trappings in that year. Data: Kielland et al. 2017.\nThe minimum count of juvenile hare trappings (when excluding the two years that had 0: hares were actually trapped and recorded in 2002 and 2009 but ages weren’t recorded so the data shows those years as 0 (Thanks to Joe Walderman for pointing this out). Including those 0’s would then potentially skew the data inaccurately when reporting descriptive statistics, so I have excluded them) was 2 in 2010 while the maximum was 126 hares in 1999. Further, the mean annual number of juvenile hares trapped was 31.5 while the median was 18.5 hares. Overall, as the year increases, we see a general trend of decreasing annual juvenile hare trappings. Moving forward, we suggest a comparison not only between juvenile hare trappings and year, but also factoring in effort by looking at success rate (juveniles trapped divided by the number of traps set up each year); if counts are higher in years with more traps set up in total, then it may be better to estimate changes in count by looking at how the success rates (%) change each year (ie. if 50 hares were caught in both 2011 and 2012, but in 2011 there were 1000 traps set up vs. 100 in 2012, factoring that success rate in would tell a very different story than looking at absolute counts).\nB. Visualizing juvenile hare weights by sex & site.\n\n\nhide\n\n#set up data to be used in visualizations\n#for beeswarm\nwjh <- juvenile_hares %>%\n  group_by(sex, grid) %>% #group by sex and grid\n  rename(Sex = sex) %>% #renaming so it looks nice on the ggplot\n  mutate(Sex = case_when( #changing sex value names so they look nice on the ggplot\n        Sex == 'f' ~ 'Female',\n        Sex == 'm' ~ 'Male',\n        Sex == 'NA' ~ 'NA'\n    )) %>%\n  mutate(grid = case_when( #changing grid value names so they look nice on the ggplot\n        grid == 'bonbs' ~ 'Black Spruce',\n        grid == 'bonmat' ~ 'Mature',\n        grid == 'bonrip' ~ 'Riparian'\n    ))\n\n#for point and errorbar\nsummary_wjh_by_gs <- wjh %>%\n  dplyr::summarize( #create summary\n    mean_weight = round(mean(weight, na.rm = TRUE), 2), #of mean weight, rounded to 2 decimal places\n    sd_weight = round(sd(weight, na.rm = TRUE), 2), #of standard deviation of weight, rounded to 2 decimal places\n    n = n() #of sample sizes\n  ) \n\n#summary_wjh_by_gs <- summary_wjh_by_gs[-c(7),] (if i wanted to remove the row with all NAs)\n\n#create visualization of juvenile hare weights by sex and site (grid)  \nggplot() +\n  geom_beeswarm(data = wjh, #create beeswarm plot\n       aes(x = Sex, #sex on x axis\n           y = weight, #weight on y axis\n           color = Sex, #color varies by sex\n           ),\n                size = 2.5, #point sizes = 2.5\n                pch = 10) + #change point shape to crosshair-like circles\n  geom_point(data = summary_wjh_by_gs, aes(x = Sex, y = mean_weight), #layer with a point showing each mean weight by sex and grid\n             color = \"black\", #set mean point color to black\n             size = 1.5) + #set point size to 1.5\n  geom_errorbar(data = summary_wjh_by_gs, #add layer to hraph with error bars\n                aes(x = Sex, #x axis is sex like the other layers\n                    ymin = mean_weight - sd_weight, #y axis represents standard deviations\n                    ymax = mean_weight + sd_weight), #in both directions\n                color = \"black\", #bars are black\n                width = 0.1) + #bar width is 0.1\n  theme_bw() + #change theme\n  facet_wrap(~grid) + #facet wrap to separate by grid\n  labs(x = \"Sex\",\n       y = \"Weight (grams)\",\n       title = \"Juvenile hare weights by sex and site, 1999-2012\") #label axes and title\n\n\n\n\nFigure 2. Weight observations (g) for juvenile male and female (including NA) snowshoe hares across three sites (Black Spruce, Mature, and Riparian). Red (Female), teal (Male) and grey (NA) crosshair points indicate individual observations for weight (g) of a juvenile snowshoe hare. Errorbar endpoints indicate the standard deviation in both directions from the mean (the black point) of each sex and site pairing. Data: Kielland et al. 2017.\nBy site, Black Spruce seems to have juveniles hares with higher weights (x̄ male = 1073.08 g, x̄ female = 1022.06 g), while the other two sites have juvenile hares with slightly lower weights (Mature: x̄ male = 950.12 g, x̄ female = 808.19 g; Riparian: x̄ male = 929.27 g, x̄ female = 824.15 g). By sex, males seem to weigh slightly more at each individual site relative to the females (x̄ male =1073.08 g, 950.12 g, 929.27 g vs. x̄ female = 1022.06 g, 808.19 g, 824.15 g) but the difference doesn’t appear to be significant (the exception being the NA sex at the Riparian site, but I don’t believe this difference necessarily says anything meaningful, especially considering the small sample size (n = 7 hares)).\nC. Weight comparison between juvenile male & female snowshoe hares.\nTable 1. Descriptive statistics (mean, standard deviation, and sample size) for juvenile male and female snowshoe hares. Data: Kielland et al. 2017.\n\n\nhide\n\n#create summary table\nsummary_wjh_by_s <- juvenile_hares %>%\n  group_by(sex) %>% #group by sex\n  filter(!is.na(sex)) %>% #take out NAs for sex\n  dplyr::summarize( #create summary\n    mean_weight = round(mean(weight, na.rm = TRUE), 2), #of mean weight, rounded to 2 decimal places\n    sd_weight = round(sd(weight, na.rm = TRUE), 2), #of standard deviation of weight, rounded to 2 decimal places\n    n = n() #of sample sizes\n  ) %>%\n  mutate(sex = case_when( #changing sex value names so they look nice in the table\n        sex == 'f' ~ 'Female',\n        sex == 'm' ~ 'Male',\n        sex == 'NA' ~ 'NA'\n    ))\n\n#renaming columns to make name formatting nicer\nnames(summary_wjh_by_s)[names(summary_wjh_by_s) == \"mean_weight\"] <- \"Mean Weight (g)\"\nnames(summary_wjh_by_s)[names(summary_wjh_by_s) == \"sd_weight\"] <- \"Standard Deviation (g)\"\nnames(summary_wjh_by_s)[names(summary_wjh_by_s) == \"n\"] <- \"Sample Size\"\nnames(summary_wjh_by_s)[names(summary_wjh_by_s) == \"sex\"] <- \"Sex\"\n\n#make the formatting of the table nicer\nformatted_summary_wjh_by_s <- summary_wjh_by_s %>%\n  kbl() %>%\n  kable_classic_2(full_width = F) #make overall formatting nicer\nformatted_summary_wjh_by_s\n\n\n\nSex\n\n\nMean Weight (g)\n\n\nStandard Deviation (g)\n\n\nSample Size\n\n\nFemale\n\n\n855.39\n\n\n292.25\n\n\n200\n\n\nMale\n\n\n945.86\n\n\n333.22\n\n\n163\n\n\nThe actual difference in means is 90.47 g, with small-moderate effect size (Cohen’s d = -0.2905). Therefore, there may not be that significant of a difference in weights between juvenile male and female snowshoe hares, despite demonstrating statistical significance (t(325.02) = -2.71, p = 0.0071).\nD. Relationship between juvenile weight & hind foot length.\n\n\nhide\n\nggplot(data = juvenile_hares, \n       aes(x = hindft, y = weight)) + #select x as hindft and y as weight\n  geom_point(color = \"slategray4\", #chose a color, color by sex doesn't reveal anything particularly interesting\n                size = 1.5, #change size of points to 1.5\n                pch = 10, #change point shape to crosshair-like circles\n                ) +\n  theme_bw() + #change theme\n  labs(x = \"Weight (grams)\",\n       y = \"Hind foot length (millimeters)\",\n       title = \"Juvenile hare weights (g) vs. hind foot length (mm), 1999-2012\") #label axes and title\n\n\n\n\nFigure 3. Relationship between weight (g) and hind foot length (mm) for all juvenile snowshoe hares. Points indicate individual snowshoe hare measurements. Data: Kielland et al. 2017.\nLinear regression in relation to weight and hind foot length\nThe output of the linear model indicates that, on average, we expect hind foot length to increase by 9.5234 mm for each 1 gram increase in weight. However, the r-squared value of 0.299 indicates that only 29.9% of variance in weight is explained by hind foot length, with the Pearson’s r correlation of 0.5466 further demostrating a low-medium positive correlation. From looking at the shape of the graph, there is some concern about the linearity of the relationship and heteroscedasticity of the errors, which means that the linear model may not be the best fit to describe the relationship.\nSummary\nOverall, we have noticed that:\nAnnual juvenile hare trappings seem to have decreased over time in general.\nJuvenile hare weights seem to vary by site and perhaps by gender within a site (but not by gender across sites).\nJuvenile hare weight and hind foot length seem to have a positive relationship, but a linear model may not best describe this relationship.\nCitations\nKielland, Knut; Chapin, F. Stuart; Ruess, Roger W. 2017. Snowshoe hare physical data in Bonanza Creek Experimental Forest: 1999-Present, Bonanza Creek LTER - University of Alaska Fairbanks. BNZ:55, http://www.lter.uaf.edu/data/data-detail/id/55. doi:10.6073/pasta/03dce4856d79b91557d8e6ce2cbcdc14\n\n\n\n",
    "preview": "posts/2022-02-17-project1/project1_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-02-21T16:38:36-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-01-22-welcome/",
    "title": "Welcome",
    "description": "This is my first post. Just created my first website!",
    "author": [
      {
        "name": "Erika Egg",
        "url": {}
      }
    ],
    "date": "2022-01-22",
    "categories": [],
    "contents": "\nThis is pretty cool!\n\n\n\n",
    "preview": {},
    "last_modified": "2022-01-22T12:39:52-08:00",
    "input_file": {}
  }
]
