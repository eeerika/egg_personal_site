[
  {
    "path": "posts/2022-12-09-project8/",
    "title": "How open public space (OPS) access relates to availability of OPS",
    "description": "Here I utilize linear models and hypothesis tests to analyze the relationship between population with OPS access and urban share in OPS, by itself and in relation to whether or not a country is considered in the Global South or not.",
    "author": [
      {
        "name": "Erika Egg",
        "url": {}
      }
    ],
    "date": "2022-12-09",
    "categories": [],
    "contents": "\nMotivation\nOpen public spaces (OPS) have many benefits to human and\nenvironmental well being. However, availability of OPS does not always\nincrease access to OPS within urban areas, and not everyone has the same\naccess to OPS within urban areas globally (Chen et al., 2022; Kabisch et\nal., 2016). While researchers are aware of accessibility issues, we\ncould benefit from a more unified quantitative analysis of how much of\nthe population benefits from an increase in open public spaces to inform\npolicy or planning, for example, looking here at the large scale\ndesignation of the Global South vs. the Global North as a starting\npoint.\nPast studies have looked into inequities related to OPS, even in\nareas of the Global South vs. the Global North, but I will be conducting\nthis analysis with a consistent data frame (a major other related study,\nRigolon et al. (2018), synthesized data from many other studies, which\ndid not all have consistent definitions for variables of interest). A\nlot of studies also focus on access differences spatially in general or\naccess in relation to socioeconomic indicators, so I will be focusing\nhere purely on if availability leads to access. Lastly, a study that\ntouched on this topic, Chen et al. (2022), focused on smaller scale\nspatial units in relation to Global South vs. Global North, but here I\nwill be looking at data averaged over the designations as a whole.\nConsidering that Chen et al. (2022) found that “the greenspace coverage\nin New York City, United States is 58.01%, but the estimated human\nexposure to greenspace is only 25.73%” while “the greenspace coverage in\nBillings, United States is 46.79%, but the greenspace exposure is\n48.89%,” I would like to see if what patterns hold up on a larger\nscale.\nQuestions\nThis leads me to my two primary sets of questions:\nDoes availability of OPS result in a disproportionate increase in\nthe share of population with OPS access within urban areas? Or,\nconsidering the case of New York City mentioned above, will this\navailability not result in equivalent or greater access?\nDoes this result differ across space: is the effect different in\nthe Global South vs. Global North? How so? What is the disparity like at\nthis scale?\nThe data\nThe data used here is from the UN Habitat Urban Indicators Database:\n11\n7 1 provision and access to open spaces in cities 2020. This\ndataset’s variables were estimated solely in 2020 and does not vary\ntemporally.\nMy two key variables of focus from this dataset are:\nUrban Share in OPS (%)\nPopulation with OPS access (%)\nThis dataset defines an open public space as: “any open piece of land\nthat is undeveloped or land with no buildings (or other built\nstructures) that is accessible to the public, and that provides\nrecreational areas for residents and helps to enhance the beauty and\nenvironmental quality of neighbourhoods” (“Public space definition”,\nn.d.). This dataset also includes information on street space\navailability, but I will be focusing here solely on OPS availability.\nWith regard to access, in this dataset an OPS is considered accessible\nto the population if it is within 400 meters of walking distance for\nthat portion of the population (“Metadata on SDG”, n.d.). The smallest\nscale that the data for these variables is available at is the city\nlevel, but I average by country. To answer the second set of questions,\nI incorporate a second\ndataset to categorize countries into Global South vs. Global\nNorth.\nSome limitations of this dataset include:\n3 countries had no data for at least one variable of interest and\nhad to be dropped from the analysis (94 countries → 91).\nSince access is based on walking distance, this carries the\nassumption that there are no other key barriers to access, which is not\nalways true. One thing that is hard to account for is the population’s\ncomfort with using the OPS: if they feel unsafe there, they may not use\nthe space despite being near it.\nEach OPS has varying levels of environmental sustainability, so\nthere are mixed environmental benefits represented within these OPS\ndesignations. Considering the definition includes environmental quality\nenhancement, we can assume the effects of these OPS are net positive,\nbut we do not know exactly how much each is benefiting the areas they\noccupy environmentally. I only mention this point to note that some\nareas may be gaining more environmental benefits from these spaces than\nothers, which this dataset does not include information on. I can only\ncomment on the human accessibility of these spaces.\nMethods\nMy general steps in conducting this analysis are as follows:\nGeneral data wrangling\nPreliminary analysis\nPlot histograms and initial correlations\n\nGenerate statistical results\nCreate linear models\nRun hypothesis tests\n\nGeneral data wrangling\nUnfold the code below to view annotated steps of how I manipulated\nthe two datasets and combined them for use in my later analyses.\n\n\nhide\n\n# cleaning and wrangling of the two datasets\naccess <- read_csv(here(\"data\", \"ops_access.csv\")) %>% # read in the first dataset\n  clean_names() %>% # make names easier to work with\n  drop_na(country, urban_share_in_ops, population_with_ops_access) %>% # drop NAs from key variables: we need all three of these pieces of information for each observation for it to be used\n  select(country, urban_share_in_ops, population_with_ops_access) %>% # select only the relevant variables\n  group_by(country) %>% # group data by country\n  summarize(mean_urb_share = mean(urban_share_in_ops), # take the mean by country for each variable of interest\n            mean_pop_w_access = mean(population_with_ops_access)) %>%\n  mutate(log_mean_urb_share = log(mean_urb_share)) # include a logged RHS variable column (relevant later)\n\nglobal_south <- read_csv(here(\"data\", \"global_south_countries.csv\")) %>% # read in the second dataset, after manually fixing a few country names that did not match between the two datasets\n  clean_names() %>% # make names easier to work with\n  filter(global_south == TRUE) # keep only country names that are considered Global South\n\ncountry_list <- unlist(global_south$country) # put these country names into a list\n\naccess_south <- access %>%\n  filter(country %in% country_list) %>% # filter the access data by these countries\n  mutate(global_south = 1) # if we see the country name, assign it a 1 = Global South\n\naccess_north <- access %>%\n  filter(!(country %in% country_list)) %>% # filter the access data by not these countries\n  mutate(global_south = 0) # if we don't see the country name, assign it a 0 = Global North\n\naccess_sorted <- rbind(access_south, access_north) %>% # combine these two datasets\n  mutate(global_south = as.factor(global_south)) # and make sure this binary variable is viewed as a factor for later use\n\n\n\nPreliminary analysis\nBefore running my statistical models and tests, I first explored the\ndata and created histograms for the two main variables of interest. This\nis where I saw that urban share in OPS was skewed right, while\nPopulation with OPS access appeared mostly normally distributed, and\nwhen plotted against each other, the relationship between the two\nvariables appears non-linear. Upon logging urban share in OPS, we then\nget a mostly normally distributed histogram and a more linear plot\nbetween the two variables, so we use the logged urban share in OPS\nmoving forward. Here, we also begin to see how countries in the Global\nNorth tend to have both higher urban share in OPS and population with\nOPS access.\n\n\nhide\n\npop_hist <- ggplot(data = access_sorted) + \n  geom_histogram(aes(mean_pop_w_access)) +\n  labs(x = \"Population with OPS access (%)\",\n       y = \"Count\") + \n  theme_minimal() + \n  theme(text = element_text(size = 8))\n\nops_hist_unalt <- ggplot(data = access_sorted) + \n  geom_histogram(aes(mean_urb_share)) +\n  labs(x = \"Urban share in OPS (%)\",\n       y = \"\") + \n  theme_minimal() + \n  theme(text = element_text(size = 8))\n\nops_hist <- ggplot(data = access_sorted) + \n  geom_histogram(aes(log_mean_urb_share)) +\n  labs(x = \"Log urban share in OPS (%)\",\n       y = \"\") + \n  theme_minimal() + \n  theme(text = element_text(size = 8))\n\ncorre_unlog <- ggplot(access_sorted, aes(x = mean_urb_share, y = mean_pop_w_access, color = global_south)) +\n  geom_point() +\n  labs(x = \"Urban share in OPS (%)\",\n       y = \"Population with OPS access (%)\") +\n  scale_color_manual(values = c(\"deeppink4\", \"palegreen4\")) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        text = element_text(size = 8))\n\ncorre_log <- ggplot(access_sorted, aes(x = log_mean_urb_share, y = mean_pop_w_access, color = global_south)) +\n  geom_point() +\n  labs(x = \"Log urban share in OPS (%)\",\n       y = \"\",\n       color = \"Global South?\") +\n  scale_color_manual(values = c(\"deeppink4\", \"palegreen4\")) +\n  theme_minimal() + \n  theme(text = element_text(size = 8))\n\n(pop_hist + ops_hist_unalt + ops_hist) / (corre_unlog + corre_log) +\n  plot_annotation(\n  title = \"Histograms and correlations\",\n  caption = \"Figure 1. \\nTop row left to right: Histograms depicting the distribution of observations for population with OPS access, urban share in OPS, and the logged version of urban share in OPS. \\nBottom row left to right: Correlation of population with OPS access and urban share in OPS and this correlation when urban share in OPS is logged. \\nColor indicates if countries are considered Global South or not.\") & \n  theme(plot.caption = element_text(size = 6.5, hjust = 0),\n        plot.title = element_text(hjust = .5))\n\n\n\n\nResults\nHere I will analyze the results of my main statistical methods:\nlinear models and hypothesis tests.\nLinear models\nI start by looking at a simple linear model between Population with\nOPS access and log Urban Share in OPS:\n\\[ \\text{pop_w_access}_i = \\beta_0 +\n\\beta_1 \\text{urb_share}_i + \\varepsilon_i \\]\nThen I build on this, adding Global South or not as another right\nhand side (RHS) term:\n\\[ \\text{pop_w_access}_i = \\beta_0 +\n\\beta_1 \\text{urb_share}_i + \\beta_2 \\text{global_south}_i +\n\\varepsilon_i \\]\nIn the last model, I add in an interaction term between log Urban\nShare in OPS and Global South or not. This model represents the case in\nwhich Global South or not changes the effect that log Urban Share in OPS\nhas on Population with OPS access.\n\\[ \\text{pop_w_access}_i = \\beta_{0} +\n\\beta_{1} \\text{urb_share}_i + \\beta_{2} \\text{global_south}_i +\n\\beta_{3} \\text{urb_share}_i \\cdot \\text{global_south}_i +\n\\varepsilon_i\\]\n\n\nhide\n\nmod = lm(mean_pop_w_access ~ log_mean_urb_share, data = access_sorted)\nmod2 = lm(mean_pop_w_access ~ log_mean_urb_share + global_south, data = access_sorted)\nmod3 = lm(mean_pop_w_access ~ log_mean_urb_share * global_south, data = access_sorted)\n\n\ntab_mod_combined <- tab_model(mod, mod2, mod3,\n          string.ci = \"95% CI\",\n          string.p = \"p-value\",\n          pred.labels = c(\"Intercept\", \"Log urban share in OPS (%)\", \"Global South (1)\", \"Log urban share in OPS (%):Global South (1)\"),\n          dv.labels = c(\"One term\", \"Two terms\", \"Two terms with interaction\"),\n          title = \"Table 1. Linear model summaries for one term, two terms, and two terms with interaction\")\n\n\naug_mod = augment(mod)\naug_mod2 = augment(mod2)\naug_mod3 = augment(mod3)\n\nplot_mod <- ggplot(access_sorted, aes(x = log_mean_urb_share, y = mean_pop_w_access)) +\n  geom_point(color = \"darkgrey\") +\n  geom_line(data = aug_mod, aes(y = .fitted)) +\n  labs(title = \"Population with OPS access vs. log urban share in OPS by country\",\n       x = \"\",\n       y = \"\") +\n  theme_minimal()\n\nplot_mod2 <- ggplot(access_sorted, aes(x = log_mean_urb_share, y = mean_pop_w_access, color = global_south)) +\n  geom_point() +\n  geom_line(data = aug_mod2, aes(y = .fitted, color = global_south)) +\n  labs(x = \"\",\n       y = \"Population with OPS access (%)\",\n       color = \"Global South?\") +\n  scale_color_manual(values = c(\"deeppink4\", \"palegreen4\")) +\n  theme_minimal()\n\nplot_mod3 <- ggplot(access_sorted, aes(x = log_mean_urb_share, y = mean_pop_w_access, color = global_south)) +\n  geom_point() +\n  geom_line(data = aug_mod3, aes(y = .fitted, color = global_south)) +\n  labs(x = \"Log urban share in OPS (%)\",\n       y = \"\") +\n  scale_color_manual(values = c(\"deeppink4\", \"palegreen4\")) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\ntab_mod_combined\n\n\n\nTable 1. Linear model summaries for one term, two terms, and two terms\nwith interaction\n\n\n \n\n\nOne term\n\n\nTwo terms\n\n\nTwo terms with interaction\n\n\nPredictors\n\n\nEstimates\n\n\n95% CI\n\n\np-value\n\n\nEstimates\n\n\n95% CI\n\n\np-value\n\n\nEstimates\n\n\n95% CI\n\n\np-value\n\n\nIntercept\n\n\n28.73\n\n\n23.06 – 34.41\n\n\n<0.001\n\n\n28.14\n\n\n17.56 – 38.72\n\n\n<0.001\n\n\n32.88\n\n\n16.61 – 49.15\n\n\n<0.001\n\n\nLog urban share in OPS (%)\n\n\n22.44\n\n\n17.63 – 27.25\n\n\n<0.001\n\n\n22.69\n\n\n16.57 – 28.82\n\n\n<0.001\n\n\n19.60\n\n\n9.49 – 29.72\n\n\n<0.001\n\n\nGlobal South (1)\n\n\n\n\n\n\n\n\n0.50\n\n\n-7.04 – 8.04\n\n\n0.895\n\n\n-5.64\n\n\n-23.32 – 12.04\n\n\n0.528\n\n\nLog urban share in OPS (%):Global South (1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4.89\n\n\n-7.83 – 17.62\n\n\n0.447\n\n\nObservations\n\n\n91\n\n\n91\n\n\n91\n\n\nR2 / R2 adjusted\n\n\n0.491 / 0.486\n\n\n0.491 / 0.480\n\n\n0.495 / 0.477\n\n\nhide\n\nplot_mod / plot_mod2 / plot_mod3 +\n  plot_annotation(caption = \"Figure 2. Top to bottom: Model fits plotted on the data for one term, two terms, and two terms with interaction.\") & \n  theme(plot.caption = element_text(size = 6.5, hjust = 0))\n\n\n\n\nInterpretations\nOne term:\n\\(\\beta_0\\) = We expect the\npopulation with OPS access to be 28.73% when log urban share in OPS is\n0% (this would not be possible, as if there are no OPS there could be no\naccess).\n\\(\\beta_1\\) = A 1% change in the\npercent of urban share in OPS leads to a 22.44% change in population\nwith OPS access.\nTwo terms:\n\\(\\beta_0\\) = We expect the\npopulation with OPS access to be 28.14% when log urban share in OPS is\n0%, for the Global North (this would not be possible, as if there are no\nOPS there could be no access).\n\\(\\beta_1\\) = A 1% change in the\npercent of urban share in OPS leads to a 22.69% change in population\nwith OPS access for the Global North.\n\\(\\beta_2\\) = On average, \\(\\beta_1\\) is 0.5% higher for the Global\nSouth relative to the Global North.\nTwo terms with interaction:\n\\(\\beta_0\\) = We expect the\npopulation with OPS access to be 32.88% when log urban share in OPS is\n0%, for the Global North (this would not be possible, as if there are no\nOPS there could be no access).\n\\(\\beta_1\\) = A 1% change in the\npercent of urban share in OPS leads to a 19.60% change in population\nwith OPS access for the Global North.\n\\(\\beta_2\\) = On average, \\(\\beta_1\\) is 5.64% lower for the Global\nSouth relative to the Global North, when log urban share in OPS is\n0%.\n\\(\\beta_3\\) = The effect of urban\nshare in OPS on population with OPS access is 4.89% higher in the Global\nSouth relative to the Global North.\nThe only ones that are significant are the \\(\\beta_0\\) terms and the \\(\\beta_1\\) terms at the \\(\\alpha=0.05\\) significance level. The \\(\\beta_2\\) term does not have a significant\np-value but it does go down when the interaction term is added in. The\nadjusted R-squared value goes down slightly with each progressive model,\nindicating worse fit.\nHypothesis tests\nThe first hypothesis test we perform is a linear hypothesis test on\nthe slope for the first model. This allows us to further explore whether\nor not urban share in OPS disproportionately affects population with OPS\naccess. If the slope is equal to 1 (in an unlogged situation), then the\ntwo variables would increase by the same amount. If it does not, then\nthey would be increasing at different rates. Since we have logged the\nRHS variable, this changes the value we are using from 1 to 100. Since\nwe would divide by 100 to get the slope back to roughly a regularly\ninterpretable value, I have chosen to multiply the 1 by 100 in an effort\nto get it to the same interpretation as what we are using (see here\nfor more information on the math behind this). Therefore, these are our\nnull and alternative hypotheses:\n\\[H_{0}: \\beta_1 = 100\\] \\[H_{1}: \\beta_1 ≠ 100\\]\nOur second and third hypothesis tests we perform are t-tests on the\ndifference in means between Global South and Global North for (log)\nurban share in OPS and population with OPS access. This allows us to\nlook closer at the disparity between the two designations.\n\\[H_{0}: \\mu_{Global North} - \\mu_{Global\nSouth} = 0\\] \\[H_{1}: \\mu_{Global\nNorth} - \\mu_{Global South} ≠ 0\\]\n\n\nhide\n\nlin <- linearHypothesis(mod, \"log_mean_urb_share\", rhs = 100)\n\nt1 <- t.test(log_mean_urb_share ~ global_south, data = access_sorted)\nt2 <- t.test(mean_pop_w_access ~ global_south, data = access_sorted)\n\nlintest_df <- c(\"\", \"\", \"\", \"\", \"p-value\" = lin$`Pr(>F)`) %>%\n  t() %>%\n  as.data.frame() %>%\n  select(-\"p-value1\")\nnames(lintest_df) <- c(\"Global North mean\", \"Global South mean\", \"CI (lower)\", \"CI (upper)\", \"p-value\")\ntest_name <- c(\"linear (model 1 slope)\", \"t-test (log urban share in OPS)\", \"t-test (population with OPS access)\")\n\nttests <- list()\nttests[[1]] <- t1\nttests[[2]] <- t2\n\ncombined_test_df <- sapply(ttests, function(x) {\n     c(round(x$estimate[1], 2),\n       round(x$estimate[2], 2),\n       \"CI (lower)\" = round(x$conf.int[1], 2),\n       \"CI (upper)\" = round(x$conf.int[2], 2),\n       \"p-value\" = round(x$p.value, 2))\n}) %>%\n  t() %>%\n  as.data.frame() %>%\n  rename(\"Global North mean\" = \"mean in group 0\",\n         \"Global South mean\" = \"mean in group 1\") %>%\n  rbind(lintest_df, .) %>%\n  cbind(test_name, .) %>%\n  rename(\"Test name\" = test_name) %>%\n  mutate(\"p-value\" = case_when(\n    \"p-value\" < 0.001 ~ \"p-value\",\n    TRUE ~ \"<0.001\"))\n\ntest_tab <- combined_test_df %>%\n  kbl(caption = \"Table 2. Hypothesis test results\") %>%\n  kable_classic_2(full_width = F)\ntest_tab\n\n\n\nTable 1: Table 2. Hypothesis test results\n\n\nTest name\n\n\nGlobal North mean\n\n\nGlobal South mean\n\n\nCI (lower)\n\n\nCI (upper)\n\n\np-value\n\n\nlinear (model 1 slope)\n\n\n\n\n\n\n\n\n\n\n<0.001\n\n\nt-test (log urban share in OPS)\n\n\n1.53\n\n\n0.78\n\n\n0.54\n\n\n0.97\n\n\n<0.001\n\n\nt-test (population with OPS access)\n\n\n62.95\n\n\n46.32\n\n\n9.24\n\n\n24.01\n\n\n<0.001\n\n\nHere we see that all tests performed are significant at \\(\\alpha=0.05\\). We are 95% confident that\n[0.54, 0.97] contains the difference in log urban share in OPS between\nGlobal North and Global South, and we are 95% confident that [9.24,\n24.01] contains the difference in population with access to OPS between\nGlobal North and Global South.\nConclusion & Discussion\nIn regards to our first set of questions, we learn that there is\nevidence that the variables have a significant relationship and a\ndisproportionate relationship between population with access to OPS and\nurban share in OPS, where population with access to OPS increases a lot\nfor a small increase in urban share in OPS. Therefore, at a large scale,\nwe do not see evidence for trends like what was found for New York City.\nIn regards to the second set of questions, there is no evidence that\nfactoring in Global South vs. not impacts the relationship between\npopulation with access to OPS and urban share in OPS significantly in\nthe two additional models; however, we can clearly see there is evidence\nfor a great disparity between the Global North and Global South for both\nvariables as of 2020.\nThere are several ways this analysis could be expanded:\nWe could look into more hypothesis tests to gain more information\non the relationship between the two variables and Global North\nvs. Global South.\nWe could build on previous studies and further explore smaller\nscales for disparities within countries or between countries (or other\nsmaller scale levels) to more specifically target where change is\nneeded.\nWe could gauge another baseline for how much a 1% increase in\nurban share in OPS should increase population with OPS access and\nanalyze this (ie. should a 1% increase in urban share in OPS lead to a\n10% increase in population with OPS access normally? How should we tell\nif we are fully optimizing OPS placement for accessibility\npurposes?).\nWe could compare to different years to see if accessibility is\ngetting better and by how much. However, no other years appear to be\navailable from this database at the moment.\nReferences\n11 7 1 provision and access to open spaces in cities 2020. UN\nHabitat. (n.d.). Retrieved December 8, 2022, from https://data.unhabitat.org/datasets/GUO-UN-Habitat::11-7-1-provision-and-access-to-open-spaces-in-cities-2020/about\nChen, B., Wu, S., Song, Y., Webster, C., Xu, B., & Gong, P. (2022,\nAugust 8). Contrasting inequality in human exposure to greenspace\nbetween cities of Global North and Global South. Nature News. Retrieved\nDecember 8, 2022, from https://www.nature.com/articles/s41467-022-32258-4\nFord, C. (2018, August 17). Interpreting Log Transformations in a\nLinear Model. University of Virginia Library: Research Data Services +\nSciences. Retrieved December 8, 2022, from https://data.library.virginia.edu/interpreting-log-transformations-in-a-linear-model/\nGlobal South Countries 2022. World Population Review. (n.d.).\nRetrieved December 8, 2022, from https://worldpopulationreview.com/country-rankings/global-south-countries\nKabisch, N., Strohbach, M., Haase, D., & Kronenberg, J. (2016).\nUrban Green Space Availability in European cities. Ecological\nIndicators, 70, 586–596. https://doi.org/10.1016/j.ecolind.2016.02.029\nMetadata on SDG indicator 11 7 1. UN Habitat. (n.d.). Retrieved\nDecember 8, 2022, from https://data.unhabitat.org/documents/GUO-UN-Habitat::metadata-on-sdg-indicator-11-7-1/explore\nPublic space definition for SDG 11 7 1. UN Habitat. (n.d.). Retrieved\nDecember 8, 2022, from https://data.unhabitat.org/documents/GUO-UN-Habitat::public-space-definition-for-sdg-11-7-1/explore\nRigolon, A., Browning, M., Lee, K., & Shin, S. (2018). Access to\nurban green space in cities of the Global South: A systematic literature\nreview. Urban Science, 2(3), 67. https://doi.org/10.3390/urbansci2030067\n\n\n\n",
    "preview": "posts/2022-12-09-project8/project8_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2023-02-01T09:20:28-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-13-project5/",
    "title": "Word frequency and sentiment analysis of Cyrano de Bergerac",
    "description": "Text analysis from ESM 244 at UCSB.",
    "author": [
      {
        "name": "Erika Egg",
        "url": {}
      }
    ],
    "date": "2022-03-13",
    "categories": [],
    "contents": "\n\n\nhide\n\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\nlibrary(tidyverse)\nlibrary(tidytext)\nlibrary(textdata)\nlibrary(pdftools)\nlibrary(ggwordcloud)\nlibrary(here)\nlibrary(jpeg)\nlibrary(grid)\nlibrary(viridis)\n\n\n\nOverview\nThe data in this report is sourced from a PDF (from Project Gutenberg) of the play Cyrano de Bergerac by Edmond Rostand. After removing text not part of the original play, I first explore the most frequent words throughout the spoken dialogue of the play (excluding the labels of which character is speaking). I then transition to sentiment analysis of the play by each major scene (1-5).\nCitations:\nEdmond Rostand. 1897. Cyrano de Bergerac. PDF EBook version by Project Gutenberg, released 1998 and posted 2009. https://www.gutenberg.org/files/1254/1254-h/1254-h.htm\nWrangling the text\n\n\nhide\n\n# Read in pdf of Cyrano de Bergerac\ncyrano_text <- pdf_text(here::here('data', 'cyrano.pdf'))\n\n\n\n\n\nhide\n\n# Extract lines from the play\ncyrano_lines <- data.frame(cyrano_text) %>%\n   mutate(page = 1:n()) %>%\n   mutate(text_full = str_split(cyrano_text, pattern = '\\\\n')) %>%\n   unnest(text_full) %>%\n   mutate(text_full = str_trim(text_full))\n\n# Identify lines by scene in the play\ncyrano_scenes <- cyrano_lines %>%\n   slice(-(9388:9754)) %>%\n   slice(-(1:157)) %>%\n   mutate(scene = ifelse(str_detect(text_full, \"Scene\"), text_full, NA)) %>%\n   fill(scene, .direction = 'down') %>%\n   separate(col = scene, into = c(\"scene\", \"scene_num_full\"), sep = \" \") %>%\n   mutate(main_scene = str_extract(scene_num_full, \"[:digit:]\")) %>%\n   mutate(text_full = str_replace(text_full, \"^.*:$\", \"\")) # took out name mentions that are not spoken by other characters\n\n# Get words from play\ncyrano_words <- cyrano_scenes %>%\n   unnest_tokens(word, text_full) %>%\n   select(-cyrano_text, -scene, -scene_num_full) %>%\n   drop_na(main_scene)\n\n# Remove stop words\ncyrano_words_clean <- cyrano_words %>%\n   anti_join(stop_words, by = 'word')\n\n# Get counts overall for entire play\nentire_nonstop_counts <- cyrano_words_clean %>%\n   count(word)\n\n# Get the top 100 words in the play\nplay_top100 <- entire_nonstop_counts %>%\n   filter(word != \"1\",\n          word != \"2\",\n          word != \"3\",\n          word != \"4\",\n          word != \"5\",\n          word != \"scene\",\n          word != \"de\",\n          word != \"bergerac\") %>% # remove more non-relevant words\n   arrange(-n) %>%\n   slice(1:100) \n\n\n\nCreating a word cloud\n\n\nhide\n\n# Read in picture for word cloud background\ncyrano_pic <- jpeg::readJPEG(here(\"data\", \"cyrano_pic.jpg\"))\n# Link to image on web - https://www.deviantart.com/protvscar/art/Cyrano-de-Bergerac-Fly-leaf-33171255\n\n# Make word cloud of top 100 words in the play\nggplot(data = play_top100, aes(label=word)) +\n   annotation_custom(rasterGrob(cyrano_pic, \n                                width = unit(1,\"npc\"), \n                                height = unit(1,\"npc\")), \n                                -Inf, Inf, -Inf, Inf) +\n   geom_text_wordcloud(aes(color = n, size = n), text=element_text(size=10,  family=\"Impact\")) +\n   scale_size_area(max_size = 7) +\n   scale_color_viridis(option = \"rocket\", direction = -1)\n\n\n\n\nFigure 1. Word cloud showing the top 100 words in the play Cyrano de Bergerac. In general, the darker the color of the word and closer to the center it is, the more times it appears in the play (most to least occurrences: purple, purple-pink, pink-red, orange, lighter shades of orange, and then white). “ah,” “ay,” and “love” along with key character names (Cyrano, Roxane, and Christian) are the most common. Background image created by protvscar on DeviantArt (link provided in the code above).\nPerforming sentiment analysis\n\n\nhide\n\n# Get sentiments for words in play using afinn\ncyrano_afinn <- cyrano_words_clean %>%\n   inner_join(get_sentiments(\"afinn\"), by = 'word')\n\n# Get the counts by scene\nafinn_counts <- cyrano_afinn %>%\n   count(main_scene, value)\n\n# Find the mean afinn score by scene\nafinn_means <- cyrano_afinn %>%\n   group_by(main_scene) %>%\n   summarize(mean_afinn = mean(value))\n\n# Create sentiment column graph by scene\nggplot(data = afinn_means, aes(x = as.numeric(main_scene), y = mean_afinn, fill = mean_afinn)) +\n  geom_col() +\n  theme_bw() +\n  coord_flip() +\n  scale_fill_gradient2(low = \"tomato4\", \n                       mid = \"snow\", \n                       high = \"darkolivegreen4\") +\n  scale_x_continuous(trans = \"reverse\") +\n  theme(legend.position = \"none\") +\n  labs(x = \"Scene\", \n       y = \"Average Afinn Sentiment Score\",\n       title = \"Average Afinn sentiment scores by main scene\") +\n  theme(panel.grid.minor.x=element_blank(),\n        panel.grid.major.x=element_blank(), #get rid of vertical grid lines\n        panel.grid.minor.y=element_blank(),\n        panel.grid.major.y=element_blank(),\n        text=element_text(size = 10, face = \"bold\"))\n\n\n\n\nFigure 2. Average Afinn sentiment scores by major scene in Cyrano de Bergerac. From Scene 2 onwards, the play becomes more negative. If one has read the play, one’s opinion would likely be similar to the sentiments found in this chart.\n\n\n\n",
    "preview": "posts/2022-03-13-project5/project5_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2023-02-01T09:20:28-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-13-project6/",
    "title": "Adult salmon passage at the Willamette Falls fish ladder on the Willamette River, 2001-2010",
    "description": "Time series, seasonplot, and annual count analysis from ESM 244 at UCSB.",
    "author": [
      {
        "name": "Erika Egg",
        "url": {}
      }
    ],
    "date": "2022-03-13",
    "categories": [],
    "contents": "\n\n\nhide\n\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(tsibble)\nlibrary(feasts)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(here)\n\n\n\nOverview\nSummary: The data used in this report includes data on the adult passage of many species fish at the Willamette Falls fish ladder on the Willamette River in Oregon from 2001 to 2010. This report focuses on steelhead, coho, and jack coho salmon. Here I analyze their passage throughout the time period using time series and line graphs of annual counts, as well as investigate seasonality of trends within each year.\nCitation: Adult fish passage recorded from 2001-01-01 to 2010-12-31 at the Willamette Falls fish ladder on the Willamette River (Oregon). Data were shared by and accessed from Columbia River DART (Data Access in Real Time). Data Courtesy of U.S. Army Corps of Engineers, NWD and Chelan, Douglas, and Grant County PUDs, Yakima Klickitat Fisheries Project, Colville Tribes Fish & Wildlife (OBMEP), Oregon Department of Fish & Wildlife, Washington Department of Fish & Wildlife. http://www.cbr.washington.edu/dart/query/adult_graph_text\n\n\nhide\n\n# Read in the data\nfish <- read_csv(here(\"data\", \"willamette_fish_passage.csv\")) %>%\n   clean_names()\n\n\n\n\n\nhide\n\n# Initial wrangling of the data\nfish[is.na(fish)] = 0\n\n# Use this for seasonplots (need to set factors in different way for it to plot)\nfish_ts <- fish %>% \n  mutate(date = lubridate::mdy(date)) %>% \n  as_tsibble(key = NULL, index = date) %>%\n  select(date, coho, jack_coho, steelhead) %>%\n  pivot_longer(!date, names_to=\"species\", values_to=\"passage\")\n\n# Use this otherwise to plot\nfish_ts_factors <- fish %>% \n  mutate(date = lubridate::mdy(date)) %>% \n  as_tsibble(key = NULL, index = date) %>%\n  select(date, coho, jack_coho, steelhead) %>%\n  pivot_longer(!date, names_to=\"species\", values_to=\"passage\")\n\n# Set factors for consistent ordering/coloring\nfish_ts_factors$species <- as.factor(fish_ts_factors$species)\nfish_ts_factors$species <- factor(fish_ts_factors$species, \n                          levels = c(\"steelhead\", \"coho\", \"jack_coho\"),\n                          labels = c(\"Steelhead\", \"Coho\", \"Jack Coho\"))\n\n\n\nOriginal time series\n\n\nhide\n\n# Plot time series\nggplot(data = fish_ts_factors, aes(x = date, y = passage, color = species))+\n   geom_line(alpha=.8) +\n   facet_wrap(~species) +\n   scale_color_manual(values = c(\"steelblue3\", \"aquamarine4\", \"palegreen3\")) +\n   labs(x = \"Year\",\n        y = \"Count\",\n        title = \"Times series data by salmon species:\",\n        subtitle = \"Steelhead, Coho, and Jack Coho\") +\n   scale_y_continuous(labels = scales::comma) +\n   theme_light() +\n   theme(text = element_text(family = \"Courier\",\n                                  size = 11,\n                                  face = \"bold\"),\n         axis.text = element_text(size = 9),\n         legend.position =\"none\",\n         panel.grid.minor.x=element_blank(),\n         panel.grid.major.x=element_blank())\n\n\n\n\nFigure 1. Time series of adult passage counts constructed for steelhead, coho, and jack coho salmon species throughout the years.\nTrends:\nSteelhead salmon fluctuate most evenly in adult passage count across the years.\nCoho salmon adult passage counts increased significantly near the end of each year from around 2008 to 2010.\nJack coho salmon fluctuate at a lower count level relative to the other two.\nSeasonplots\n\n\nhide\n\n# Set factors in different way for seasonplots or it messes with tsibble\nfish_ts$species_facet = factor(fish_ts$species, \n                               levels = c(\"steelhead\", \"coho\", \"jack_coho\"),\n                               labels = c(\"Steelhead\", \"Coho\", \"Jack Coho\"))\n\n# Plot seasonplots\ngg_season(data = fish_ts, y = passage, pal = (hue_pal())(4), size = .3, alpha=.7) +\n   labs(x = \"Date\",\n        y = \"Count\",\n        title = \"Seasonplots by salmon species:\",\n        subtitle = \"Steelhead, Coho, and Jack Coho\") +\n   facet_grid(species_facet ~ .) +\n   scale_y_continuous(labels = scales::comma) +\n   theme_light() +\n   theme(text = element_text(family = \"Courier\",\n         size = 11,\n         face = \"bold\"),\n         axis.text = element_text(size = 9),\n         panel.grid.minor.x=element_blank(),\n         panel.grid.major.x=element_blank(),\n         legend.position = \"bottom\")\n\n\n\n\nFigure 2. Seasonplots of adult passage counts over the months constructed for steelhead, coho, and jack coho salmon species. Each year in the study period is presented as a different color on the graphs for each species.\nTrends:\nSteelhead salmon fluctuate a lot in adult passage count in most years throughout the beginning of the year, maintaining decent counts during this period, and especially near May-July.\nCoho and jack coho salmon peak most near October in all years.\nJack coho and coho saw clear peaks in counts in 2008 and 2009, respectively.\nAnnual counts by species\n\n\nhide\n\n# Plot annual counts by species\ncount_fish <- fish_ts_factors %>%\n   as_tibble() %>%\n   mutate(year = year(date)) %>%\n   select(-date) %>%\n   group_by(year, species) %>%\n   summarize(yearly_counts = sum(passage))\n\nggplot(data = count_fish)  + \n   geom_line(aes(x = year, y = yearly_counts, color = species), stat=\"identity\", size = 1.5, alpha=.7) +\n   scale_color_manual(labels = c(\"Steelhead\", \"Coho\", \"Jack Coho\"), \n                      values = c(\"steelblue3\", \"aquamarine4\", \"palegreen3\")) +\n   labs(x = \"Year\",\n        y = \"Count\",\n        color = \"Species\",\n        title = \"Annual counts by salmon species:\",\n        subtitle = \"Steelhead, Coho, and Jack Coho\") +\n   scale_x_continuous(breaks=c(2002, 2004, 2006, 2008, 2010)) +\n   scale_y_continuous(labels = scales::comma) +\n   theme_light() +\n   theme(text = element_text(family = \"Courier\",\n                                  size = 11,\n                                  face = \"bold\"),\n              axis.text = element_text(size = 9),\n        panel.grid.minor.x=element_blank(),\n        panel.grid.major.x=element_blank())\n\n\n\n\nFigure 3. Line graph of annual counts constructed for steelhead, coho, and jack coho salmon species. Steel blue represents steelhead, aquamarine represents coho, and pale green represents jack coho.\nTrends:\nSteelhead salmon saw an overall decrease over the time period, but had mostly higher counts than the other two during the time period.\nCoho salmon saw an overall increase over the time period, surpassing steelhead counts once in 2009 with a sudden increase.\nJack coho salmon counts stayed relatively low with little fluctuation over the time period.\n\n\n\n",
    "preview": "posts/2022-03-13-project6/project6_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2023-02-01T09:20:28-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-21-project2/",
    "title": "Worst Graph: Creative Graph-Making Exploration",
    "description": "A graph demonstrating what NOT to do, created in ESM 206 at UCSB.",
    "author": [
      {
        "name": "Erika Egg",
        "url": {}
      }
    ],
    "date": "2022-02-21",
    "categories": [],
    "contents": "\nWorst graph exploration\nGoal:\nMake the worst possible graph (unclear, irresponsible, terrible looking) I possibly can by customizing (from the ggplot default) in at least 7 ways - more encouraged - to make it as terrible as possible.\n\n\nhide\n\nlaunches_pegasus <- space_launches %>% \n  select(launch_year, type) %>% #select only columns launch_year and type\n  filter(str_detect(type, \"Pegasus\")) #filter for only types containing Pegasus\n\nmax_cat <- readPNG(here(\"data\", \"max_cat.png\")) #read in image for use as background\n\nggplot(data = launches_pegasus, aes(x = launch_year)) + \n  annotation_custom(rasterGrob(max_cat, \n                               width = unit(1,\"npc\"), \n                               height = unit(1,\"npc\")), \n                    -Inf, Inf, -Inf, Inf) +\n  geom_histogram(color = \"yellow\",\n           aes(fill = type)) + #1 added legend where you have to look back and forth and match things up to graph; two colors are almost the same/hard to distinguish\n  coord_flip() + #2 flipped it horizontally which makes it harder to understand\n  scale_fill_manual(values = c(\"magenta1\",\"yellow\",\"chartreuse1\",\"cyan1\", \"lawngreen\")) + #3 chose very bright contrasting colors that hurt eyes\n  labs(x = \"# of pegasus type space launch ship shuttles going into outer space, blasting off, reaching the stars\", \n       y = \"the launch years, every year there was a pegasus type launch including years from 1990 to 2016 maybe idk i think that's it\", \n       title = \"hdfoighsdoigshertoihewoirhtoi\") + #4 made axes long and with extra fluff; title is gibberish\n  theme(plot.title = element_text(size = 6, family = \"Wingdings\"), axis.text.y = element_text(angle = 120), axis.text.x = element_text(angle = -120), axis.title.y = element_text(angle = -135, size = 5, color = \"cyan1\"), axis.title.x = element_text(angle = 20, size = 5, color = \"magenta1\")) #5 very small size font for title/axes, #6 changed title font to unreadable wingdings, #7 angled/upsidedown years on y-axis and counts on x-axis; angled x and y axis labels as well, #8 added image background of my cat\n\n\n\n\nConclusion\nBy looking into what makes a graph bad, I learned a lot about what to include to make a graph good, such as color considerations, clarity of writing, orientation of text, and balancing simplicity with complexity.\n\n\n\n",
    "preview": "posts/2022-02-21-project2/project2_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2023-02-01T09:20:28-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-21-project3/",
    "title": "Wrangling and Visualizing Mountain Yellow-legged Frog (Rana muscosa) Counts",
    "description": "Creating a compound figure in ESM 244 at UCSB.",
    "author": [
      {
        "name": "Erika Egg",
        "url": {}
      }
    ],
    "date": "2022-02-21",
    "categories": [],
    "contents": "\n\n\nhide\n\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(patchwork)\nlibrary(extrafont) #need font_import() if first time\nlibrary(here)\n\n\n\nIntroduction\nThe data used in this report includes amphibian abundance recorded by the Sierra Lakes Inventory Project from 1995-2002, accompanied by additional characteristics such as species, life stage, and locational attributes. Here I attempt to answer two questions: “What is the mountain yellow-legged frog abundance trend over this time period by life stage?” and “Which lakes contained the highest total observed mountain yellow-legged frog counts over this time period?” utilizing a compound figure as a final output.\nPreparatory steps\n1. Read in the file containing the Sierra amphibian data.\n\n\nhide\n\nfrogs <- read_excel(here(\"data\", \"sierra_amphibians.xlsx\")) #read in the data we will be using: sierra                                                                       amphibians\n\n\n\n2. Perform some initial wrangling on the data that can aid the creation of both plots.\n\n\nhide\n\nramu_wrangled <- frogs %>%\n   filter(amphibian_species == \"RAMU\", amphibian_life_stage != \"EggMass\") %>% #filter for RAMU and exclude                                                                                     EggMass stage\n   mutate(date_new = ymd(survey_date)) %>% #convert date to workable (date) format in new column\n   mutate(year = year(date_new)) %>% #extract year from new date column\n   drop_na(amphibian_number) #remove NAs from relevant column\n\n\n\nCreating our first plot\n3a. Wrangle the data for the first plot by getting RAMU counts after grouping by life stage and year.\n\n\nhide\n\ncount_ramu_stage <- ramu_wrangled %>% #use the subset created above\n  group_by(amphibian_life_stage, year) %>% #group by life stage and year\n  summarize(stage_frog_count = sum(amphibian_number)) #take the count of frogs\n\n\n\n3b. Create a graph of total mountain yellow-legged frog (Rana muscosa) count each year across all water bodies, by life stage excluding the ‘EggMass’ level.\n\n\nhide\n\np1 <- ggplot(data = count_ramu_stage, aes(x = year, #set x as year,\n                                          y = stage_frog_count, #y as count,\n                                          color = amphibian_life_stage)) + #and color as life stage\n  geom_line(size = 0.4) + #change line width\n  facet_wrap(~amphibian_life_stage) + #facet wrap by life stage for readability\n  scale_color_manual(values = c(\"palegreen3\", \"steelblue1\", \"tan\")) + #change line colors\n  theme_dark() + #choose theme\n  theme(panel.grid.minor.x=element_blank(),\n        panel.grid.major.x=element_blank(), #get rid of vertical grid lines \n        text=element_text(size=10,  family=\"Impact\")) + \n  labs(x = \"Year\", #label x,\n       y = \"Yellow-legged frog counts\", #and y axis,\n       color = \"Life Stage\") #and color key\n\n\n\nCreating our second plot\n4a. Wrangle the data for the second plot by getting the top 5 RAMU counts (excluding Tadpoles too) after grouping by lake.\n\n\nhide\n\nramu_no_tadpole <- ramu_wrangled %>%\n   filter(amphibian_life_stage != \"Tadpole\") #filter out Tadpoles\n\ncount_ramu_lake <- ramu_no_tadpole %>%\n   group_by(lake_id) %>% #group by lake id\n   summarize(lake_frog_count = sum(amphibian_number)) %>% #take the counts \n   slice_max(lake_frog_count, n = 5) %>% #take only top 5 lakes, including ties if applicable\n   mutate(id_reformatted = paste(\"Lake\", lake_id)) #have a reformatted lake id\n\n\n\n4b. Create a column graph containing total counts (over all years of the study) of combined adult and subadult endangered mountain yellow-legged frogs (Rana muscosa) observed in the 5 lakes with the greatest total observed counts.\n\n\nhide\n\np2 <- ggplot(data = count_ramu_lake, aes(x = fct_reorder(id_reformatted, lake_frog_count), #set x as lake id                                                                                                reordered by count\n                                         y = lake_frog_count)) + #set y as count\n  geom_col(color = \"tan\", #change edge color, \n           fill = \"aquamarine4\") + #and fill color \n  theme_dark() + #choose theme\n  theme(panel.grid.minor.y=element_blank(),\n        panel.grid.major.y=element_blank(), #get rid of horizontal grid lines \n        text=element_text(size=10,  family=\"Impact\")) + #change text font and size\n  labs(y = \"Total yellow-legged frog counts (Adult + SubAdult)\", #label y,\n       x = \"Lake ID\") + #and x axis\n  coord_flip() #make horizontal\n\n\n\nFinal compound plot\n5. Put together final plot including both individual plots constructed previously.\n\n\nhide\n\np1 / p2 #create top and bottom combined plot\n\n\n\n\nFigure 1. Top graph: yellow-legged frog counts each year by life stage from 1995 to 2002. Height of lines indicate number of yellow-legged frogs counted in that year for each life stage. Bottom graph: cumulative yellow-legged frogs counts across the years 1995 to 2002 by lake. The lakes with the top five counts have been included, identified only by ID numbers for confidentiality. Data: Knapp et al. 2020.\nCitations\nKnapp, R.A., C. Pavelka, E.E. Hegeman, and T.C. Smith. 2020. The Sierra Lakes Inventory Project: Non-Native fish and community composition of lakes and ponds in the Sierra Nevada, California ver 2. Environmental Data Initiative. https://doi.org/10.6073/pasta/d835832d7fd00d9e4466e44eea87fab3\n\n\n\n",
    "preview": "posts/2022-02-21-project3/project3_files/figure-html5/unnamed-chunk-7-1.png",
    "last_modified": "2023-02-01T09:20:28-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-21-project4/",
    "title": "Florida Palmetto Species Classification",
    "description": "Binary logistic regression from ESM 244 at UCSB.",
    "author": [
      {
        "name": "Erika Egg",
        "url": {}
      }
    ],
    "date": "2022-02-21",
    "categories": [],
    "contents": "\n\n\nhide\n\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(caret)\nlibrary(AICcmodavg)\nlibrary(kableExtra)\nlibrary(patchwork)\nlibrary(here)\n\n\nOverview\nThe data used in this report includes variables of plant height,\ncanopy length, canopy width, and number of green leaves as they pertain\nto Florida palmettos from 1981-2017, as well as indicates the palmetto\nspecies: Serenoa repens or Sabal etonia. Here I use binary logistic\nregression to test the feasibility of using the four variables listed\npreviously to classify whether a palmetto is species Serenoa repens or\nSabal etonia.\nData citation:\nAbrahamson, W.G. 2019. Survival, growth and biomass estimates of two\ndominant palmetto species of south-central Florida from 1981 - 2017,\nongoing at 5-year intervals ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/f2f96ec76fbbd4b9db431c79a770c4d5\nPreparatory steps\n1. Read in\nthe file containing Florida palmetto data.\n\n\nhide\n\n#Read in palmetto data\npalmetto <- read_csv(here(\"data\", \"palmetto.csv\"))\n\n\n2. Perform some\ninitial wrangling on the data.\n\n\nhide\n\npalmetto_sub <- palmetto %>%\n   mutate(species = case_when(\n    species == 1 ~ \"Serenoa repens\",\n    species == 2 ~ \"Sabal etonia\")) %>% #rename 1 and 2 to reflect species names\n   mutate(species = as.factor(species)) %>% #ensure it is a factor after renaming\n   select(species, height, length, green_lvs, width) %>% #select relevant columns\n   drop_na() #drop the NAs\n\n\nData exploration through\nvisualization\n3.\nCreate 3 finalized data visualizations (combined into a compound figure)\nin which I explore differences in height, canopy length, and green\nleaves for the two species.\n\n\nhide\n\ngl <- palmetto_sub %>% #number of green leaves\n   ggplot(aes(x = species, y = green_lvs, fill = species)) + #show diffs by species\n   geom_boxplot() + #choose boxplot\n   scale_fill_manual(values = c(\"rosybrown3\", \"darkkhaki\")) + #change box colors\n   theme_minimal() + #choose theme\n   theme(panel.grid.minor.x=element_blank(),\n         panel.grid.major.x=element_blank(), #get rid of vertical grid lines \n         text=element_text(size=10,  family=\"Times New Roman\"), #choose font\n         legend.position = \"none\") + #no legend\n   labs(x = \"\", #unlabel x,\n        y = \"\", #and y axis,\n        title = \"Number of Green Leaves\") #and add title\n\nl <- palmetto_sub %>% #canopy length\n   ggplot(aes(x = species, y = length, fill = species)) + #show diffs by species\n   geom_boxplot() + #choose boxplot\n   scale_fill_manual(values = c(\"rosybrown3\", \"darkkhaki\")) + #change box colors\n   theme_minimal() + #choose theme\n   theme(panel.grid.minor.x=element_blank(),\n         panel.grid.major.x=element_blank(), #get rid of vertical grid lines \n         text=element_text(size=10,  family=\"Times New Roman\"), #choose font\n         legend.position = \"none\") + #no legend\n   labs(x = \"\", #unlabel x,\n        y = \"\", #and y axis,\n        title = \"Canopy Length\") #and add title\n\nh <- palmetto_sub %>% #plant height\n   ggplot(aes(x = species, y = height, fill = species)) + #show diffs by species\n   geom_boxplot() + #choose boxplot\n   scale_fill_manual(values = c(\"rosybrown3\", \"darkkhaki\")) + #change box colors\n   theme_minimal() + #choose theme\n   theme(panel.grid.minor.x=element_blank(),\n         panel.grid.major.x=element_blank(), #get rid of vertical grid lines\n         text=element_text(size=10,  family=\"Times New Roman\"), #choose font\n         legend.position = \"none\") + #no legend\n   labs(x = \"\", #unlabel x,\n        y = \"\", #and y axis,\n        title = \"Plant Height\") #and add title\n\nh + l + gl #create compound figure\n\n\n\nFigure 1. From left to right: graphs demonstrating\ndifferences in plant height, canopy length, and number of green leaves\nbetween the two species of palmetto, Sabal etonia and Serenoa repens.\nThe less overlap the boxplots have and the further away the means are\nfrom each other, the more likely that variable is able to help predict\nspecies. Data: Abrahamson, 2019.\nTakeaway:\nPlant height seems least likely to help classify which species is\nwhich (similar means and overlap), canopy length seems more likely\n(slightly different means, less overlap), and number of green leaves\nseems the most likely, as the boxplots for number of green leaves have\nno overlap.\nBinary logistic regression\n4.\nDetermine the probability of a plant being either Serenoa repens or\nSabal etonia based on several predictor variables, performing the\nanalysis twice, using cross validation to compare two models:\nLog odds of plant type using plant height, canopy length, canopy\nwidth and green leaves as predictor variable.\nLog odds of plant type using plant height, canopy width and green\nleaves (i.e., drop canopy length for this model)\n\n\nhide\n\n#model 1 using height, length, width, and green leaves\nf1 <- species ~ height + length + width + green_lvs #formula 1\npalmetto_blr1 <- glm(formula = f1, #glm 1\n                    data = palmetto_sub,\n                    family = \"binomial\")\n\n#model 2 excluding length\nf2 <- species ~ height + width + green_lvs #formula 2\npalmetto_blr2 <- glm(formula = f2, #glm 2\n                    data = palmetto_sub,\n                    family = \"binomial\")\n\n#glancing at model outputs for initial reference\nblr1_tidy <- broom::tidy(palmetto_blr1)\n#blr1_tidy\nblr2_tidy <- broom::tidy(palmetto_blr2)\n#blr2_tidy\n\n\n5.\nUse ten-fold cross validation, repeated ten times, to see which model\nperforms better at classification, backing up the results with a\ncomparison of AICc values as well.\n\n\nhide\n\n#set up seed for reproducibility\nset.seed(123)\n\n#set up method of 10-fold cross validation repeated 10 times\ntr_ctrl <- trainControl(method = \"repeatedcv\", number = 10, repeats = 10)\n\n#train the two models using tr_ctrl\nmodel1 <- train(f1, \n                data = palmetto_sub,\n                method = \"glm\", \n                family = 'binomial',\n                trControl = tr_ctrl)\n#model1\n\nmodel2 <- train(f2, \n                data = palmetto_sub, \n                method = \"glm\", \n                family = 'binomial',\n                trControl = tr_ctrl)\n#model2\n\n#compare AICcs\nAICc_values <- AICcmodavg::aictab(list(palmetto_blr1, palmetto_blr2))\n#AICc_values\n\n\nTakeaway:\nBoth repeated cross validation (Model 1: 91.6% accuracy vs. a lower\nModel 2: 89.9% accuracy) and AICc values (Model 1: 5194.57 vs. a\nsignificantly higher Model 2: 5987.48) confirm that Model 1 (plant\nheight + canopy length + canopy width + green leaves) performs better\nthan Model 2 (same variables except excluding canopy length).\n6.\nTrain the selected model using the entire dataset, and create a\nfinalized table containing the binary logistic regression model\nresults.\n\n\nhide\n\n#final model\npalmetto_blr_final <- glm(formula = f1,\n                    data = palmetto_sub,\n                    family = \"binomial\")\n\n#final table\nblr_tidy_final <- broom::tidy(palmetto_blr1) %>%\n   mutate(p.value = case_when(p.value < 0.001 ~ \"< 0.001\")) %>%\n   kbl(caption = \"Binary logistic regression results for the selected model\") %>%\n   kable_paper(full_width = F)\nblr_tidy_final\n\n\nTable 1: Binary logistic regression results for the\nselected model\n\n\nterm\n\n\nestimate\n\n\nstd.error\n\n\nstatistic\n\n\np.value\n\n\n(Intercept)\n\n\n-3.2266851\n\n\n0.1420708\n\n\n-22.71180\n\n\n< 0.001\n\n\nheight\n\n\n0.0292173\n\n\n0.0023061\n\n\n12.66984\n\n\n< 0.001\n\n\nlength\n\n\n-0.0458233\n\n\n0.0018661\n\n\n-24.55600\n\n\n< 0.001\n\n\nwidth\n\n\n-0.0394434\n\n\n0.0021000\n\n\n-18.78227\n\n\n< 0.001\n\n\ngreen_lvs\n\n\n1.9084747\n\n\n0.0388634\n\n\n49.10728\n\n\n< 0.001\n\n\nSpecies classification\nsuccess analysis\n7.\nEvaluate how successfully the final model would “classify” a plant as\nthe correct species, using a 50% cutoff, including a finalized table\nshowing, for each species, how many plants in the original dataset would\nbe correctly classified and how many were incorrectly classified by the\nmodel, as well as percent correctly classified.\n\n\nhide\n\n#generating probability predictions\nblr1_fitted <- palmetto_blr1 %>%\n   broom::augment(type.predict = \"response\")\n\n#adding columns for the species prediction and species prediction correctness\nblr1_prediction <- blr1_fitted %>%\n  mutate(prediction = case_when(\n     .fitted < 0.5 ~ \"Sabal etonia\",\n     .fitted >= 0.5 ~ \"Serenoa repens\")) %>% \n  mutate(correctness = case_when(\n     species != prediction ~ \"Incorrect\",\n     species == prediction ~ \"Correct\")) \n\n#putting together prediction table including percent correctly classified\nprediction_table <- blr1_prediction %>%\n   group_by(species, correctness) %>% \n   summarize(counts = n()) %>%\n   pivot_wider(names_from = correctness, values_from = counts) %>%\n   mutate(percent_correct = round((Correct/(Correct+Incorrect)*100), 1))\n\n#renaming columns to make name formatting nicer\nnames(prediction_table)[names(prediction_table) == \"species\"] <- \"Species\"\nnames(prediction_table)[names(prediction_table) == \"percent_correct\"] <- \"% Correctly Classified\"\nnames(prediction_table)[names(prediction_table) == \"Correct\"] <- \"# Correct\"\nnames(prediction_table)[names(prediction_table) == \"Incorrect\"] <- \"# Incorrect\"\n\n#make the overall formatting of the table nicer\nprediction_table %>%\n   kbl(caption = \"Model species prediction based on a 50% probability cutoff\") %>%\n   kable_paper(full_width = F)\n\n\nTable 2: Model species prediction based on a 50%\nprobability cutoff\n\n\nSpecies\n\n\n# Correct\n\n\n# Incorrect\n\n\n% Correctly Classified\n\n\nSabal etonia\n\n\n5701\n\n\n454\n\n\n92.6\n\n\nSerenoa repens\n\n\n5548\n\n\n564\n\n\n90.8\n\n\nConcluding takeaway:\nThe final model classifies Sabal etonia slightly better than Serenoa\nrepens (92.6% vs. 90.8% accuracy, a 1.8% difference). Overall,\nclassification of species for both species have very high accuracies\nusing a model that includes all four of our target variables.\n\n\n\n",
    "preview": "posts/2022-02-21-project4/project4_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2023-02-01T09:20:28-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-17-project1/",
    "title": "Bonanza Hares: Exploratory Report",
    "description": "A sample report constructed in ESM 206 at UCSB.",
    "author": [
      {
        "name": "Erika Egg",
        "url": {}
      }
    ],
    "date": "2022-02-17",
    "categories": [],
    "contents": "\nIntroduction\nThis report provides an exploratory overview of snowshoe hare data from near Bonanza Creek Experimental Forest at three sites (Black Spruce, Mature, and Riparian) (Kielland et al. 2017). The Black Spruce site refers to a mature lowland black spruce stand, while the Mature and Riparian sites includes stands of a variety of mature tree species, shrub species, and/or grass species (differing by site, but including: white spruce, black spruce, paper birch, willow, prickly rose, fireweed, among others), with a key difference being that the Riparian is located in a flood zone (Kielland et al. 2017). The data used here spans 1999 to 2012 (Kielland et al. 2017). Specifically, we conduct analyses of juvenile snowshoe hare trappings over the timespan (including only trappings from the three sites described) and of juvenile snowshoe hare weights in relation to sex, site, and hind foot length.\nData and analyses\nSnowshoe hare measurements (such as weight and hind foot length, key focuses in this report) are provided by the Bonanza Creek LTER, a partnership between the University of Alaska Fairbanks, and the U.S. Forest Service (Kielland et al. 2017). The data contain observations for 3,197 recorded trappings, collected from 1999 to 2012 (Kielland et al. 2017). Here we utilize R and R Studio to analyze the data through the generation of ggplot visualizations (ie. beeswarm, column chart, scatterplot), descriptive statistics (ie. mean, median, standard deviation), and statistical tests and related statistics (ie. two-sample t-test with a significance level (\\(\\alpha\\)) of 0.05, Cohen’s d, Pearson’s r, simple linear regression).\nExploratory findings\nA. Annual juvenile hare trap counts.\n\n\nhide\n\n#getting the counts for the total number of juvenile (age == \"j\") hare trappings during each year of the study (include all grid sites)\njuvenile_hares <- hares %>%\n  filter(age == \"j\") %>% #filtering for juvenile\n  mutate(date_new = mdy(date)) %>% #convert date to workable (date) format in new column\n  mutate(year = year(date_new))  #extract year from new date column\n\ncount_jh <- juvenile_hares %>% #use the subset created above\n  group_by(year) %>% #group by year\n  count() #take the count\n\n\n\n\n\nhide\n\n#create a finalized data visualization of the counts by year\nggplot(data = count_jh, aes(x = year, y = n)) + #setting x axis as year and y as the count\n  geom_col(color = \"black\",\n           fill = \"slategray4\") + #change fill color and edge color\n  theme_bw() + #choose theme\n  theme(panel.grid.minor.x=element_blank(),\n           panel.grid.major.x=element_blank()) + #get rid of vertical grid lines\n  labs(x = \"Year\",\n       y = \"Number of juvenile hare trappings\",\n       title = \"Juvenile snowshoe hare trap counts by year, 1999-2012\") #label axes and title\n\n\n\nhide\n\nsummary_count_jh <- count_jh %>%\n  ungroup() %>% #ungroup the groups to get stats across all\n  summarize(\n    mean_trapped = mean(n), #get mean\n    median_trapped = median(n), #get median\n    min_trapped = min(n), #get min\n    max_trapped = max(n) #get max\n  )\n\n\n\nFigure 1. Juvenile snowshoe hair trappings each year from 1999 to 2012. Height of columns indicate number of trappings in that year. Data: Kielland et al. 2017.\nThe minimum count of juvenile hare trappings (when excluding the two years that had 0: hares were actually trapped and recorded in 2002 and 2009 but ages weren’t recorded so the data shows those years as 0 (Thanks to Joe Walderman for pointing this out). Including those 0’s would then potentially skew the data inaccurately when reporting descriptive statistics, so I have excluded them) was 2 in 2010 while the maximum was 126 hares in 1999. Further, the mean annual number of juvenile hares trapped was 31.5 while the median was 18.5 hares. Overall, as the year increases, we see a general trend of decreasing annual juvenile hare trappings. Moving forward, we suggest a comparison not only between juvenile hare trappings and year, but also factoring in effort by looking at success rate (juveniles trapped divided by the number of traps set up each year); if counts are higher in years with more traps set up in total, then it may be better to estimate changes in count by looking at how the success rates (%) change each year (ie. if 50 hares were caught in both 2011 and 2012, but in 2011 there were 1000 traps set up vs. 100 in 2012, factoring that success rate in would tell a very different story than looking at absolute counts).\nB. Visualizing juvenile hare weights by sex & site.\n\n\nhide\n\n#set up data to be used in visualizations\n#for beeswarm\nwjh <- juvenile_hares %>%\n  group_by(sex, grid) %>% #group by sex and grid\n  rename(Sex = sex) %>% #renaming so it looks nice on the ggplot\n  mutate(Sex = case_when( #changing sex value names so they look nice on the ggplot\n        Sex == 'f' ~ 'Female',\n        Sex == 'm' ~ 'Male',\n        Sex == 'NA' ~ 'NA'\n    )) %>%\n  mutate(grid = case_when( #changing grid value names so they look nice on the ggplot\n        grid == 'bonbs' ~ 'Black Spruce',\n        grid == 'bonmat' ~ 'Mature',\n        grid == 'bonrip' ~ 'Riparian'\n    ))\n\n#for point and errorbar\nsummary_wjh_by_gs <- wjh %>%\n  dplyr::summarize( #create summary\n    mean_weight = round(mean(weight, na.rm = TRUE), 2), #of mean weight, rounded to 2 decimal places\n    sd_weight = round(sd(weight, na.rm = TRUE), 2), #of standard deviation of weight, rounded to 2 decimal places\n    n = n() #of sample sizes\n  ) \n\n#summary_wjh_by_gs <- summary_wjh_by_gs[-c(7),] (if i wanted to remove the row with all NAs)\n\n#create visualization of juvenile hare weights by sex and site (grid)  \nggplot() +\n  geom_beeswarm(data = wjh, #create beeswarm plot\n       aes(x = Sex, #sex on x axis\n           y = weight, #weight on y axis\n           color = Sex, #color varies by sex\n           ),\n                size = 2.5, #point sizes = 2.5\n                pch = 10) + #change point shape to crosshair-like circles\n  geom_point(data = summary_wjh_by_gs, aes(x = Sex, y = mean_weight), #layer with a point showing each mean weight by sex and grid\n             color = \"black\", #set mean point color to black\n             size = 1.5) + #set point size to 1.5\n  geom_errorbar(data = summary_wjh_by_gs, #add layer to hraph with error bars\n                aes(x = Sex, #x axis is sex like the other layers\n                    ymin = mean_weight - sd_weight, #y axis represents standard deviations\n                    ymax = mean_weight + sd_weight), #in both directions\n                color = \"black\", #bars are black\n                width = 0.1) + #bar width is 0.1\n  theme_bw() + #change theme\n  facet_wrap(~grid) + #facet wrap to separate by grid\n  labs(x = \"Sex\",\n       y = \"Weight (grams)\",\n       title = \"Juvenile hare weights by sex and site, 1999-2012\") #label axes and title\n\n\n\n\nFigure 2. Weight observations (g) for juvenile male and female (including NA) snowshoe hares across three sites (Black Spruce, Mature, and Riparian). Red (Female), teal (Male) and grey (NA) crosshair points indicate individual observations for weight (g) of a juvenile snowshoe hare. Errorbar endpoints indicate the standard deviation in both directions from the mean (the black point) of each sex and site pairing. Data: Kielland et al. 2017.\nBy site, Black Spruce seems to have juveniles hares with higher weights (x̄ male = 1073.08 g, x̄ female = 1022.06 g), while the other two sites have juvenile hares with slightly lower weights (Mature: x̄ male = 950.12 g, x̄ female = 808.19 g; Riparian: x̄ male = 929.27 g, x̄ female = 824.15 g). By sex, males seem to weigh slightly more at each individual site relative to the females (x̄ male =1073.08 g, 950.12 g, 929.27 g vs. x̄ female = 1022.06 g, 808.19 g, 824.15 g) but the difference doesn’t appear to be significant (the exception being the NA sex at the Riparian site, but I don’t believe this difference necessarily says anything meaningful, especially considering the small sample size (n = 7 hares)).\nC. Weight comparison between juvenile male & female snowshoe hares.\nTable 1. Descriptive statistics (mean, standard deviation, and sample size) for juvenile male and female snowshoe hares. Data: Kielland et al. 2017.\n\n\nhide\n\n#create summary table\nsummary_wjh_by_s <- juvenile_hares %>%\n  group_by(sex) %>% #group by sex\n  filter(!is.na(sex)) %>% #take out NAs for sex\n  dplyr::summarize( #create summary\n    mean_weight = round(mean(weight, na.rm = TRUE), 2), #of mean weight, rounded to 2 decimal places\n    sd_weight = round(sd(weight, na.rm = TRUE), 2), #of standard deviation of weight, rounded to 2 decimal places\n    n = n() #of sample sizes\n  ) %>%\n  mutate(sex = case_when( #changing sex value names so they look nice in the table\n        sex == 'f' ~ 'Female',\n        sex == 'm' ~ 'Male',\n        sex == 'NA' ~ 'NA'\n    ))\n\n#renaming columns to make name formatting nicer\nnames(summary_wjh_by_s)[names(summary_wjh_by_s) == \"mean_weight\"] <- \"Mean Weight (g)\"\nnames(summary_wjh_by_s)[names(summary_wjh_by_s) == \"sd_weight\"] <- \"Standard Deviation (g)\"\nnames(summary_wjh_by_s)[names(summary_wjh_by_s) == \"n\"] <- \"Sample Size\"\nnames(summary_wjh_by_s)[names(summary_wjh_by_s) == \"sex\"] <- \"Sex\"\n\n#make the formatting of the table nicer\nformatted_summary_wjh_by_s <- summary_wjh_by_s %>%\n  kbl() %>%\n  kable_classic_2(full_width = F) #make overall formatting nicer\nformatted_summary_wjh_by_s\n\n\n\nSex\n\n\nMean Weight (g)\n\n\nStandard Deviation (g)\n\n\nSample Size\n\n\nFemale\n\n\n855.39\n\n\n292.25\n\n\n200\n\n\nMale\n\n\n945.86\n\n\n333.22\n\n\n163\n\n\nThe actual difference in means is 90.47 g, with small-moderate effect size (Cohen’s d = -0.2905). Therefore, there may not be that significant of a difference in weights between juvenile male and female snowshoe hares, despite demonstrating statistical significance (t(325.02) = -2.71, p = 0.0071).\nD. Relationship between juvenile weight & hind foot length.\n\n\nhide\n\nggplot(data = juvenile_hares, \n       aes(x = hindft, y = weight)) + #select x as hindft and y as weight\n  geom_point(color = \"slategray4\", #chose a color, color by sex doesn't reveal anything particularly interesting\n                size = 1.5, #change size of points to 1.5\n                pch = 10, #change point shape to crosshair-like circles\n                ) +\n  theme_bw() + #change theme\n  labs(x = \"Weight (grams)\",\n       y = \"Hind foot length (millimeters)\",\n       title = \"Juvenile hare weights (g) vs. hind foot length (mm), 1999-2012\") #label axes and title\n\n\n\n\nFigure 3. Relationship between weight (g) and hind foot length (mm) for all juvenile snowshoe hares. Points indicate individual snowshoe hare measurements. Data: Kielland et al. 2017.\nLinear regression in relation to weight and hind foot length\nThe output of the linear model indicates that, on average, we expect hind foot length to increase by 9.5234 mm for each 1 gram increase in weight. However, the r-squared value of 0.299 indicates that only 29.9% of variance in weight is explained by hind foot length, with the Pearson’s r correlation of 0.5466 further demostrating a low-medium positive correlation. From looking at the shape of the graph, there is some concern about the linearity of the relationship and heteroscedasticity of the errors, which means that the linear model may not be the best fit to describe the relationship.\nSummary\nOverall, we have noticed that:\nAnnual juvenile hare trappings seem to have decreased over time in general.\nJuvenile hare weights seem to vary by site and perhaps by gender within a site (but not by gender across sites).\nJuvenile hare weight and hind foot length seem to have a positive relationship, but a linear model may not best describe this relationship.\nCitations\nKielland, Knut; Chapin, F. Stuart; Ruess, Roger W. 2017. Snowshoe hare physical data in Bonanza Creek Experimental Forest: 1999-Present, Bonanza Creek LTER - University of Alaska Fairbanks. BNZ:55, http://www.lter.uaf.edu/data/data-detail/id/55. doi:10.6073/pasta/03dce4856d79b91557d8e6ce2cbcdc14\n\n\n\n",
    "preview": "posts/2022-02-17-project1/project1_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2023-02-01T09:20:28-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-01-22-welcome/",
    "title": "Welcome",
    "description": "This is my first post. Just created my first website!",
    "author": [
      {
        "name": "Erika Egg",
        "url": {}
      }
    ],
    "date": "2022-01-22",
    "categories": [],
    "contents": "\nThis is pretty cool!\n\n\n\n",
    "preview": {},
    "last_modified": "2023-02-01T09:20:28-08:00",
    "input_file": {}
  }
]
